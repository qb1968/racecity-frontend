{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dustin\\\\racecity-frontend\\\\src\\\\core\\\\Checkbox.js\";\nimport React, { useState } from 'react';\nimport CheckboxM from '@material-ui/core/Checkbox';\n\nconst Checkbox = ({\n  handleFilters\n}) => {\n  const [checked, setCheked] = useState([]);\n\n  const handleToggle = c => () => {\n    // return the first index or -1\n    const currentCategoryId = checked.indexOf(c);\n    const newCheckedCategoryId = [...checked]; // if currently checked was not already in checked state > push\n    // else pull/take off\n\n    if (currentCategoryId === -1) {\n      newCheckedCategoryId.push(c);\n    } else {\n      newCheckedCategoryId.splice(currentCategoryId, 1);\n    }\n\n    console.log(newCheckedCategoryId);\n    setCheked(newCheckedCategoryId);\n    handleFilters(newCheckedCategoryId);\n  };\n\n  return;\n\n  /*#__PURE__*/\n  React.createElement(\"li\", {\n    key: i,\n    className: \"list-unstyled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CheckboxM, {\n    onChange: handleToggle(),\n    value: checked.indexOf(c._id === -1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, c.name));\n};\n\nexport default Checkbox;","map":{"version":3,"sources":["D:/Dustin/racecity-frontend/src/core/Checkbox.js"],"names":["React","useState","CheckboxM","Checkbox","handleFilters","checked","setCheked","handleToggle","c","currentCategoryId","indexOf","newCheckedCategoryId","push","splice","console","log","i","_id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAGC,EAAAA;AAAH,CAAD,KAAwB;AACvC,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBL,QAAQ,CAAC,EAAD,CAArC;;AAEA,QAAMM,YAAY,GAAIC,CAAD,IAAO,MAAM;AAChC;AACA,UAAMC,iBAAiB,GAAGJ,OAAO,CAACK,OAAR,CAAgBF,CAAhB,CAA1B;AACA,UAAMG,oBAAoB,GAAG,CAAC,GAAGN,OAAJ,CAA7B,CAHgC,CAIhC;AACA;;AACA,QAAII,iBAAiB,KAAK,CAAC,CAA3B,EAA8B;AAC5BE,MAAAA,oBAAoB,CAACC,IAArB,CAA0BJ,CAA1B;AACD,KAFD,MAEO;AACLG,MAAAA,oBAAoB,CAACE,MAArB,CAA4BJ,iBAA5B,EAA+C,CAA/C;AACD;;AACDK,IAAAA,OAAO,CAACC,GAAR,CAAYJ,oBAAZ;AACAL,IAAAA,SAAS,CAACK,oBAAD,CAAT;AACAP,IAAAA,aAAa,CAACO,oBAAD,CAAb;AACD,GAdD;;AAgBA;;AACE;AAAA;AAAI,IAAA,GAAG,EAAEK,CAAT;AAAY,IAAA,SAAS,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,QAAQ,EAAET,YAAY,EADxB;AAEE,IAAA,KAAK,EAAEF,OAAO,CAACK,OAAR,CAAgBF,CAAC,CAACS,GAAF,KAAU,CAAC,CAA3B,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCT,CAAC,CAACU,IAAvC,CATF;AAYH,CAhCD;;AAkCA,eAAef,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport CheckboxM from '@material-ui/core/Checkbox';\r\n\r\nconst Checkbox = ({  handleFilters }) => {\r\n  const [checked, setCheked] = useState([]);\r\n\r\n  const handleToggle = (c) => () => {\r\n    // return the first index or -1\r\n    const currentCategoryId = checked.indexOf(c);\r\n    const newCheckedCategoryId = [...checked];\r\n    // if currently checked was not already in checked state > push\r\n    // else pull/take off\r\n    if (currentCategoryId === -1) {\r\n      newCheckedCategoryId.push(c);\r\n    } else {\r\n      newCheckedCategoryId.splice(currentCategoryId, 1);\r\n    }\r\n    console.log(newCheckedCategoryId);\r\n    setCheked(newCheckedCategoryId);\r\n    handleFilters(newCheckedCategoryId);\r\n  };\r\n\r\n  return \r\n    <li key={i} className='list-unstyled'>\r\n      <CheckboxM\r\n        onChange={handleToggle()}\r\n        value={checked.indexOf(c._id === -1)}\r\n        \r\n        \r\n        \r\n      />\r\n      \r\n      <label className='form-check-label'>{c.name}</label>\r\n    </li>\r\n  \r\n};\r\n\r\nexport default Checkbox;\r\n"]},"metadata":{},"sourceType":"module"}