{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dustin\\\\racecity-frontend\\\\src\\\\core\\\\Search.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { getFilteredProducts } from './apiCore';\nimport Card from './Card';\n\nconst Search = () => {\n  const [allData, setAllData] = useState([]);\n  const [filteredData, setFilteredData] = useState([allData]);\n\n  const handleSearch = event => {\n    let value = event.target.value.toLowerCase();\n    let result = [];\n    console.log(value);\n    result = allData.filter(data => {\n      return data.name.search(value) != -1;\n    });\n    setFilteredData(result);\n  };\n\n  useEffect(() => {\n    getFilteredProducts().then(response => {\n      console.log(response.data);\n      setAllData(response.data);\n      setFilteredData(response.data);\n    }).catch(error => {\n      console.log(\"Error getting fake data: \" + error);\n    });\n  }, []); // import { makeStyles } from '@material-ui/core/styles';\n  // import InputLabel from '@material-ui/core/InputLabel';\n  // import MenuItem from '@material-ui/core/MenuItem';\n  // import FormHelperText from '@material-ui/core/FormHelperText';\n  // import FormControl from '@material-ui/core/FormControl';\n  // import Select from '@material-ui/core/Select';\n  // import TextField from '@material-ui/core/TextField';\n  // import Button from '@material-ui/core/Button';\n  // import SearchIcon from '@material-ui/icons/Search';\n  // import { getCategories, list } from './apiCore';\n  // import Card from './Card';\n  // const useStyles = makeStyles((theme) => ({\n  //   formControl: {\n  //     margin: theme.spacing(1),\n  //     minWidth: 120,\n  //   },\n  //   selectEmpty: {\n  //     marginTop: theme.spacing(2),\n  //   },\n  //   tField: {\n  //     width: 800,\n  //     marginTop: 2,\n  //   },\n  //   root: {\n  //     '& > *': {\n  //       margin: theme.spacing(2),\n  //     },\n  //   },\n  // }));\n  // const Search = () => {\n  //   const [data, setData] = useState({\n  //     categories: [],\n  //     category: '',\n  //     search: '',\n  //     results: [],\n  //     searched: false,\n  //   });\n  //   const { categories, category, search, results, searched } = data;\n  //   const loadCategories = () => {\n  //     getCategories().then((data) => {\n  //       if (data.error) {\n  //         console.log(data.error);\n  //       } else {\n  //         setData({ ...data, categories: data });\n  //       }\n  //     });\n  //   };\n  //   useEffect(() => {\n  //     loadCategories();\n  //   }, []);\n  //   const searchData = () => {\n  //     // console.log(search, category);\n  //     if (search) {\n  //       list({ search: search || undefined, category: category }).then(\n  //         (response) => {\n  //           if (response.error) {\n  //             console.log(response.error);\n  //           } else {\n  //             setData({ ...data, results: response, searched: true });\n  //           }\n  //         }\n  //       );\n  //     }\n  //   };\n  //   const searchSubmit = (e) => {\n  //     e.preventDefault();\n  //     searchData();\n  //   };\n  //   const handleChange = (name) => (event) => {\n  //     setData({ ...data, [name]: event.target.value, searched: false });\n  //   };\n\n  const searchMessage = result => {\n    if (result.length > 0) {\n      return `Found ${result.length} products`;\n    }\n\n    if (searched && results.length < 1) {\n      return `Search: No products found`;\n    }\n  };\n\n  const styles = {\n    display: \"inline\",\n    width: \"30%\",\n    height: 50,\n    float: \"left\",\n    padding: 5,\n    border: \"0.5px solid black\",\n    marginBottom: 10,\n    marginRight: 10\n  }; // return (\n  //   <div className=\"App\">\n  //     <div style={{ margin: \"0 auto\", marginTop: \"10%\" }}>\n  //       <label>Search:</label>\n  //       <input type=\"text\" onChange={(event) => handleSearch(event)} />\n  //     </div>\n  //     <div style={{ padding: 10 }}>\n  //       {filteredData.map((value,index) => {\n  //          return <Card key={index} product={value} />;\n  //       })}\n  //     </div>\n  //   </div>\n  // );\n\n  const searchedProducts = (result = []) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"mt-4 mb-4 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }, searchMessage(searched, results)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, results.map((product, i) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      key: i,\n      product: product,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const searchForm = () => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: searchSubmit,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, \"All\"))), /*#__PURE__*/React.createElement(TextField, {\n    onChange: handleChange('search'),\n    id: \"outlined-basic\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 26\n      }\n    }), \"Search by name\"),\n    variant: \"outlined\",\n    className: classes.tField,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-3 mt-2\",\n    style: {\n      border: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    ml: 2,\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, \"Search\")))));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }\n  }, searchForm()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }, searchedProducts(results)));\n};\n\nexport default Search;","map":{"version":3,"sources":["D:/Dustin/racecity-frontend/src/core/Search.js"],"names":["React","useState","useEffect","axios","getFilteredProducts","Card","Search","allData","setAllData","filteredData","setFilteredData","handleSearch","event","value","target","toLowerCase","result","console","log","filter","data","name","search","then","response","catch","error","searchMessage","length","searched","results","styles","display","width","height","float","padding","border","marginBottom","marginRight","searchedProducts","map","product","i","searchForm","searchSubmit","classes","root","handleChange","tField"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { getFilteredProducts } from './apiCore'\r\nimport Card from './Card'\r\n\r\n\r\n\r\nconst Search = () => {\r\n  const [allData, setAllData] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([allData])\r\n\r\n  const handleSearch = (event) => {\r\n    let value = event.target.value.toLowerCase();\r\n    let result = [];\r\n    console.log(value);\r\n    result = allData.filter((data) => {\r\n      return data.name.search(value) != -1;\r\n    });\r\n    setFilteredData(result);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFilteredProducts()\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setAllData(response.data);\r\n        setFilteredData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error getting fake data: \" + error);\r\n      });\r\n  }, []);\r\n\r\n\r\n  // import { makeStyles } from '@material-ui/core/styles';\r\n  // import InputLabel from '@material-ui/core/InputLabel';\r\n  // import MenuItem from '@material-ui/core/MenuItem';\r\n  // import FormHelperText from '@material-ui/core/FormHelperText';\r\n  // import FormControl from '@material-ui/core/FormControl';\r\n  // import Select from '@material-ui/core/Select';\r\n  // import TextField from '@material-ui/core/TextField';\r\n  // import Button from '@material-ui/core/Button';\r\n  // import SearchIcon from '@material-ui/icons/Search';\r\n\r\n  // import { getCategories, list } from './apiCore';\r\n  // import Card from './Card';\r\n\r\n  // const useStyles = makeStyles((theme) => ({\r\n  //   formControl: {\r\n  //     margin: theme.spacing(1),\r\n  //     minWidth: 120,\r\n  //   },\r\n  //   selectEmpty: {\r\n  //     marginTop: theme.spacing(2),\r\n  //   },\r\n  //   tField: {\r\n  //     width: 800,\r\n  //     marginTop: 2,\r\n  //   },\r\n  //   root: {\r\n  //     '& > *': {\r\n  //       margin: theme.spacing(2),\r\n  //     },\r\n  //   },\r\n  // }));\r\n\r\n  // const Search = () => {\r\n  //   const [data, setData] = useState({\r\n  //     categories: [],\r\n  //     category: '',\r\n  //     search: '',\r\n  //     results: [],\r\n  //     searched: false,\r\n  //   });\r\n\r\n  //   const { categories, category, search, results, searched } = data;\r\n\r\n  //   const loadCategories = () => {\r\n  //     getCategories().then((data) => {\r\n  //       if (data.error) {\r\n  //         console.log(data.error);\r\n  //       } else {\r\n  //         setData({ ...data, categories: data });\r\n  //       }\r\n  //     });\r\n  //   };\r\n\r\n  //   useEffect(() => {\r\n  //     loadCategories();\r\n  //   }, []);\r\n\r\n  //   const searchData = () => {\r\n  //     // console.log(search, category);\r\n  //     if (search) {\r\n  //       list({ search: search || undefined, category: category }).then(\r\n  //         (response) => {\r\n  //           if (response.error) {\r\n  //             console.log(response.error);\r\n  //           } else {\r\n  //             setData({ ...data, results: response, searched: true });\r\n  //           }\r\n  //         }\r\n  //       );\r\n  //     }\r\n  //   };\r\n\r\n  //   const searchSubmit = (e) => {\r\n  //     e.preventDefault();\r\n  //     searchData();\r\n  //   };\r\n\r\n  //   const handleChange = (name) => (event) => {\r\n  //     setData({ ...data, [name]: event.target.value, searched: false });\r\n  //   };\r\n\r\n    const searchMessage = ( result) => {\r\n      if ( result.length > 0) {\r\n        return `Found ${result.length} products`;\r\n      }\r\n      if (searched && results.length < 1) {\r\n        return `Search: No products found`;\r\n      }\r\n    };\r\n  const styles = {\r\n    display: \"inline\",\r\n    width: \"30%\",\r\n    height: 50,\r\n    float: \"left\",\r\n    padding: 5,\r\n    border: \"0.5px solid black\",\r\n    marginBottom: 10,\r\n    marginRight: 10,\r\n  };\r\n\r\n  // return (\r\n  //   <div className=\"App\">\r\n  //     <div style={{ margin: \"0 auto\", marginTop: \"10%\" }}>\r\n  //       <label>Search:</label>\r\n  //       <input type=\"text\" onChange={(event) => handleSearch(event)} />\r\n  //     </div>\r\n  //     <div style={{ padding: 10 }}>\r\n  //       {filteredData.map((value,index) => {\r\n  //          return <Card key={index} product={value} />;\r\n  //       })}\r\n  //     </div>\r\n  //   </div>\r\n  // );\r\n\r\n  const searchedProducts = (result = []) => {\r\n    return (\r\n      \r\n      \r\n      <div className='row'>\r\n        <div className='col-md-1'></div>\r\n        <div className='col-md-10'>\r\n          <h2 className='mt-4 mb-4 text-center'>{searchMessage(searched, results)}</h2>\r\n          <div className='row'>\r\n            {results.map((product, i) => (\r\n              <div className='col-md-4 mb-3'>\r\n                <Card key={i} product={product} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className='col-md-1'></div>\r\n      </div>\r\n    );\r\n  \r\n\r\n  }\r\n\r\n  const searchForm = () => (\r\n    <form onSubmit={searchSubmit} className={classes.root}>\r\n      <span className='input-group-text'>\r\n        <div className='input-group input-group-lg'>\r\n          <div className='input-group-prepend'>\r\n            {/* <FormControl className={classes.formControl}>\r\n              <InputLabel id='demo-simple-select-helper-label'>\r\n                Select\r\n              </InputLabel>\r\n              <Select\r\n                labelId='demo-simple-select-placeholder-label-label'\r\n                id='demo-simple-select-placeholder-label'\r\n                value={data.name}\r\n                onChange={handleChange('category')}\r\n                displayEmpty\r\n                className={classes.selectEmpty}\r\n              > */}\r\n            <MenuItem value='All'>\r\n              <em>All</em>\r\n            </MenuItem>\r\n            {/* {categories.map((c, i) => (\r\n                  <MenuItem key={i} value={c._id}>\r\n                    {c.name}\r\n                  </MenuItem>\r\n                ))} */}\r\n            {/* </Select>\r\n            </FormControl> */}\r\n          </div>\r\n\r\n          <TextField\r\n            onChange={handleChange('search')}\r\n            id='outlined-basic'\r\n            label={<span><SearchIcon />Search by name</span>}\r\n            variant='outlined'\r\n            className={classes.tField}\r\n            autoComplete='off'\r\n          />\r\n\r\n          <div className='ml-3 mt-2' style={{ border: 'none' }}>\r\n            <Button ml={2} variant='contained' color='primary' type='submit'>\r\n              Search\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </span>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='container mb-3'>{searchForm()}</div>\r\n      <div className='container-fluid mb-3'>{searchedProducts(results)}</div>\r\n    </div>\r\n  );\r\n  \r\n}\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}