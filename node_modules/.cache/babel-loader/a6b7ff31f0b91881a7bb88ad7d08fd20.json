{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dustin\\\\racecity-frontend\\\\src\\\\core\\\\Search.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { getProducts1 } from './apiCore';\nconst [allData, setAllData] = useState([]);\nconst [filteredData, setFilteredData] = useState([allData]);\n\nconst Search = event => {\n  useEffect(() => {\n    getProducts1;\n  }, []); // import { makeStyles } from '@material-ui/core/styles';\n  // import InputLabel from '@material-ui/core/InputLabel';\n  // import MenuItem from '@material-ui/core/MenuItem';\n  // import FormHelperText from '@material-ui/core/FormHelperText';\n  // import FormControl from '@material-ui/core/FormControl';\n  // import Select from '@material-ui/core/Select';\n  // import TextField from '@material-ui/core/TextField';\n  // import Button from '@material-ui/core/Button';\n  // import SearchIcon from '@material-ui/icons/Search';\n  // import { getCategories, list } from './apiCore';\n  // import Card from './Card';\n  // const useStyles = makeStyles((theme) => ({\n  //   formControl: {\n  //     margin: theme.spacing(1),\n  //     minWidth: 120,\n  //   },\n  //   selectEmpty: {\n  //     marginTop: theme.spacing(2),\n  //   },\n  //   tField: {\n  //     width: 800,\n  //     marginTop: 2,\n  //   },\n  //   root: {\n  //     '& > *': {\n  //       margin: theme.spacing(2),\n  //     },\n  //   },\n  // }));\n  // const Search = () => {\n  //   const [data, setData] = useState({\n  //     categories: [],\n  //     category: '',\n  //     search: '',\n  //     results: [],\n  //     searched: false,\n  //   });\n  //   const { categories, category, search, results, searched } = data;\n  //   const loadCategories = () => {\n  //     getCategories().then((data) => {\n  //       if (data.error) {\n  //         console.log(data.error);\n  //       } else {\n  //         setData({ ...data, categories: data });\n  //       }\n  //     });\n  //   };\n  //   useEffect(() => {\n  //     loadCategories();\n  //   }, []);\n  //   const searchData = () => {\n  //     // console.log(search, category);\n  //     if (search) {\n  //       list({ search: search || undefined, category: category }).then(\n  //         (response) => {\n  //           if (response.error) {\n  //             console.log(response.error);\n  //           } else {\n  //             setData({ ...data, results: response, searched: true });\n  //           }\n  //         }\n  //       );\n  //     }\n  //   };\n  //   const searchSubmit = (e) => {\n  //     e.preventDefault();\n  //     searchData();\n  //   };\n  //   const handleChange = (name) => (event) => {\n  //     setData({ ...data, [name]: event.target.value, searched: false });\n  //   };\n  //   const searchMessage = (searched, results) => {\n  //     if (searched && results.length > 0) {\n  //       return `Found ${results.length} products`;\n  //     }\n  //     if (searched && results.length < 1) {\n  //       return `Search: No products found`;\n  //     }\n  //   };\n  //   const searchedProducts = (results = []) => {\n\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, \"Mark\") //       <div className='row'>\n  //         <div className='col-md-1'></div>\n  //         <div className='col-md-10'>\n  //           <h2 className='mt-4 mb-4 text-center'>{searchMessage(searched, results)}</h2>\n  //           <div className='row'>\n  //             {results.map((product, i) => (\n  //               <div className='col-md-4 mb-3'>\n  //                 <Card key={i} product={product} />\n  //               </div>\n  //             ))}\n  //           </div>\n  //         </div>\n  //         <div className='col-md-1'></div>\n  //       </div>\n  //     );\n  //   };\n  //   const classes = useStyles();\n  //   const searchForm = () => (\n  //     <form onSubmit={searchSubmit} className={classes.root}>\n  //       <span className='input-group-text'>\n  //         <div className='input-group input-group-lg'>\n  //           <div className='input-group-prepend'>\n  //             {/* <FormControl className={classes.formControl}>\n  //               <InputLabel id='demo-simple-select-helper-label'>\n  //                 Select\n  //               </InputLabel>\n  //               <Select\n  //                 labelId='demo-simple-select-placeholder-label-label'\n  //                 id='demo-simple-select-placeholder-label'\n  //                 value={data.name}\n  //                 onChange={handleChange('category')}\n  //                 displayEmpty\n  //                 className={classes.selectEmpty}\n  //               > */}\n  //                 <MenuItem value='All'>\n  //                   <em>All</em>\n  //                 </MenuItem>\n  //                 {/* {categories.map((c, i) => (\n  //                   <MenuItem key={i} value={c._id}>\n  //                     {c.name}\n  //                   </MenuItem>\n  //                 ))} */}\n  //               {/* </Select>\n  //             </FormControl> */}\n  //           </div>\n  //           <TextField\n  //             onChange={handleChange('search')}\n  //             id='outlined-basic'\n  //             label={<span><SearchIcon/>Search by name</span>}\n  //             variant='outlined'\n  //             className={classes.tField}\n  //             autoComplete='off'\n  //           />\n  //           <div className='ml-3 mt-2' style={{ border: 'none' }}>\n  //             <Button ml={2} variant='contained' color='primary' type='submit'>\n  //               Search\n  //             </Button>\n  //           </div>\n  //         </div>\n  //       </span>\n  //     </form>\n  //   );\n  //   return (\n  //     <div className='row'>\n  //       <div className='container mb-3'>{searchForm()}</div>\n  //       <div className='container-fluid mb-3'>{searchedProducts(results)}</div>\n  //     </div>\n  ;\n};\n\nexport default Search;","map":{"version":3,"sources":["D:/Dustin/racecity-frontend/src/core/Search.js"],"names":["React","useState","useEffect","axios","getProducts1","allData","setAllData","filteredData","setFilteredData","Search","event"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA2B,WAA3B;AAEA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,MAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,CAACI,OAAD,CAAD,CAAhD;;AACA,MAAMI,MAAM,GAAIC,KAAD,IAAW;AAI1BR,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,YAAY;AAGb,GAJQ,EAIP,EAJO,CAAT,CAJ0B,CAS1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACE,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAzEE;AA2EA,CA/KF;;AAiLA,eAAeK,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {getProducts1} from './apiCore'\r\n\r\nconst [allData, setAllData] = useState([]);\r\nconst [filteredData, setFilteredData] = useState([allData])\r\nconst Search = (event) => {\r\n\r\n\r\n\r\nuseEffect(() => {\r\n  getProducts1\r\n  \r\n\r\n},[])\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import InputLabel from '@material-ui/core/InputLabel';\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\n// import FormHelperText from '@material-ui/core/FormHelperText';\r\n// import FormControl from '@material-ui/core/FormControl';\r\n// import Select from '@material-ui/core/Select';\r\n// import TextField from '@material-ui/core/TextField';\r\n// import Button from '@material-ui/core/Button';\r\n// import SearchIcon from '@material-ui/icons/Search';\r\n\r\n// import { getCategories, list } from './apiCore';\r\n// import Card from './Card';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   formControl: {\r\n//     margin: theme.spacing(1),\r\n//     minWidth: 120,\r\n//   },\r\n//   selectEmpty: {\r\n//     marginTop: theme.spacing(2),\r\n//   },\r\n//   tField: {\r\n//     width: 800,\r\n//     marginTop: 2,\r\n//   },\r\n//   root: {\r\n//     '& > *': {\r\n//       margin: theme.spacing(2),\r\n//     },\r\n//   },\r\n// }));\r\n\r\n// const Search = () => {\r\n//   const [data, setData] = useState({\r\n//     categories: [],\r\n//     category: '',\r\n//     search: '',\r\n//     results: [],\r\n//     searched: false,\r\n//   });\r\n\r\n//   const { categories, category, search, results, searched } = data;\r\n\r\n//   const loadCategories = () => {\r\n//     getCategories().then((data) => {\r\n//       if (data.error) {\r\n//         console.log(data.error);\r\n//       } else {\r\n//         setData({ ...data, categories: data });\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     loadCategories();\r\n//   }, []);\r\n\r\n//   const searchData = () => {\r\n//     // console.log(search, category);\r\n//     if (search) {\r\n//       list({ search: search || undefined, category: category }).then(\r\n//         (response) => {\r\n//           if (response.error) {\r\n//             console.log(response.error);\r\n//           } else {\r\n//             setData({ ...data, results: response, searched: true });\r\n//           }\r\n//         }\r\n//       );\r\n//     }\r\n//   };\r\n\r\n//   const searchSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     searchData();\r\n//   };\r\n\r\n//   const handleChange = (name) => (event) => {\r\n//     setData({ ...data, [name]: event.target.value, searched: false });\r\n//   };\r\n\r\n//   const searchMessage = (searched, results) => {\r\n//     if (searched && results.length > 0) {\r\n//       return `Found ${results.length} products`;\r\n//     }\r\n//     if (searched && results.length < 1) {\r\n//       return `Search: No products found`;\r\n//     }\r\n//   };\r\n\r\n//   const searchedProducts = (results = []) => {\r\n  return (\r\n      <h1>Mark</h1>\r\n//       <div className='row'>\r\n//         <div className='col-md-1'></div>\r\n//         <div className='col-md-10'>\r\n//           <h2 className='mt-4 mb-4 text-center'>{searchMessage(searched, results)}</h2>\r\n//           <div className='row'>\r\n//             {results.map((product, i) => (\r\n//               <div className='col-md-4 mb-3'>\r\n//                 <Card key={i} product={product} />\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//         <div className='col-md-1'></div>\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   const classes = useStyles();\r\n\r\n//   const searchForm = () => (\r\n//     <form onSubmit={searchSubmit} className={classes.root}>\r\n//       <span className='input-group-text'>\r\n//         <div className='input-group input-group-lg'>\r\n//           <div className='input-group-prepend'>\r\n//             {/* <FormControl className={classes.formControl}>\r\n//               <InputLabel id='demo-simple-select-helper-label'>\r\n//                 Select\r\n//               </InputLabel>\r\n//               <Select\r\n//                 labelId='demo-simple-select-placeholder-label-label'\r\n//                 id='demo-simple-select-placeholder-label'\r\n//                 value={data.name}\r\n//                 onChange={handleChange('category')}\r\n//                 displayEmpty\r\n//                 className={classes.selectEmpty}\r\n//               > */}\r\n//                 <MenuItem value='All'>\r\n//                   <em>All</em>\r\n//                 </MenuItem>\r\n//                 {/* {categories.map((c, i) => (\r\n//                   <MenuItem key={i} value={c._id}>\r\n//                     {c.name}\r\n//                   </MenuItem>\r\n//                 ))} */}\r\n//               {/* </Select>\r\n//             </FormControl> */}\r\n//           </div>\r\n\r\n//           <TextField\r\n//             onChange={handleChange('search')}\r\n//             id='outlined-basic'\r\n//             label={<span><SearchIcon/>Search by name</span>}\r\n//             variant='outlined'\r\n//             className={classes.tField}\r\n//             autoComplete='off'\r\n//           />\r\n\r\n//           <div className='ml-3 mt-2' style={{ border: 'none' }}>\r\n//             <Button ml={2} variant='contained' color='primary' type='submit'>\r\n//               Search\r\n//             </Button>\r\n//           </div>\r\n//         </div>\r\n//       </span>\r\n//     </form>\r\n//   );\r\n\r\n//   return (\r\n//     <div className='row'>\r\n//       <div className='container mb-3'>{searchForm()}</div>\r\n//       <div className='container-fluid mb-3'>{searchedProducts(results)}</div>\r\n//     </div>\r\n   );\r\n };\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}