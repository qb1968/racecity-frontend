{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jallison\\\\racecity-frontend\\\\src\\\\core\\\\Checkout.js\";\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { getProducts, getBraintreeClientToken, processPayment, createOrder } from './apiCore';\nimport { emptyCart } from './cartHelpers';\nimport Card from './Card';\nimport { isAuthenticated } from '../auth';\nimport { Link } from 'react-router-dom';\nimport DropIn from 'braintree-web-drop-in-react';\n\nconst Checkout = ({\n  products,\n  setRun = f => f,\n  run = undefined\n}) => {\n  const [data, setData] = useState({\n    loading: false,\n    success: false,\n    clientToken: null,\n    error: '',\n    instance: {},\n    address: ''\n  });\n\n  const userId = isAuthenticated() && isAuthenticated().user._id;\n\n  const token = isAuthenticated() && isAuthenticated().token;\n\n  const getToken = (userId, token) => {\n    getBraintreeClientToken(userId, token).then(data => {\n      if (data.error) {\n        console.log(data.error);\n        setData({ ...data,\n          error: data.error\n        });\n      } else {\n        console.log(data);\n        setData({\n          clientToken: data.clientToken\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getToken(userId, token);\n  }, []);\n\n  const handleAddress = event => {\n    setData({ ...data,\n      address: event.target.value\n    });\n  };\n\n  const getTotal = () => {\n    return products.reduce((currentValue, nextValue) => {\n      return currentValue + nextValue.count * nextValue.price;\n    }, 0);\n  };\n\n  const showCheckout = () => {\n    return isAuthenticated() ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, showDropIn()) : /*#__PURE__*/React.createElement(Link, {\n      to: \"/signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, \"Sign in to checkout\"));\n  };\n\n  let deliveryAddress = data.address;\n\n  const buy = () => {\n    setData({\n      loading: true\n    }); // send the nonce to your server\n    // nonce = data.instance.requestPaymentMethod()\n\n    let nonce;\n    let getNonce = data.instance.requestPaymentMethod().then(data => {\n      // console.log(data);\n      nonce = data.nonce; // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\n      // and also total to be charged\n      // console.log(\n      //     \"send nonce and total to process: \",\n      //     nonce,\n      //     getTotal(products)\n      // );\n\n      const paymentData = {\n        paymentMethodNonce: nonce,\n        amount: getTotal(products)\n      };\n      processPayment(userId, token, paymentData).then(response => {\n        console.log(response); // empty cart\n        // create order\n\n        const createOrderData = {\n          products: products,\n          transaction_id: response.transaction.id,\n          amount: response.transaction.amount,\n          address: deliveryAddress\n        };\n        createOrder(userId, token, createOrderData).then(response => {\n          emptyCart(() => {\n            setRun(!run); // run useEffect in parent Cart\n\n            console.log('payment success and empty cart');\n            setData({\n              loading: false,\n              success: true\n            });\n          });\n        }).catch(error => {\n          console.log(error);\n          setData({\n            loading: false\n          });\n        });\n      }).catch(error => {\n        console.log(error);\n        setData({\n          loading: false\n        });\n      });\n    }).catch(error => {\n      // console.log(\"dropin error: \", error);\n      setData({ ...data,\n        error: error.message\n      });\n    });\n  };\n\n  const showDropIn = () => /*#__PURE__*/React.createElement(\"div\", {\n    onBlur: () => setData({ ...data,\n      error: ''\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, data.clientToken !== null && products.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gorm-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, \"Delivery address:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    onChange: handleAddress,\n    className: \"form-control\",\n    value: data.address,\n    placeholder: \"Type your delivery address here...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(DropIn, {\n    options: {\n      authorization: data.clientToken,\n      paypal: {\n        flow: 'vault'\n      }\n    },\n    onInstance: instance => data.instance = instance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: buy,\n    className: \"btn btn-success btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, \"Pay\")) : null);\n\n  const showError = error => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    style: {\n      display: error ? '' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, error);\n\n  const showSuccess = success => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-info\",\n    style: {\n      display: success ? '' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, \"Thanks! Your payment was successful!\");\n\n  const showLoading = loading => loading && /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 16\n    }\n  }, \"Loading...\");\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, \"Total: $\", getTotal()), showLoading(data.loading), showSuccess(data.success), showError(data.error), showCheckout());\n};\n\nexport default Checkout;","map":{"version":3,"sources":["C:/Users/jallison/racecity-frontend/src/core/Checkout.js"],"names":["React","useState","useEffect","Button","getProducts","getBraintreeClientToken","processPayment","createOrder","emptyCart","Card","isAuthenticated","Link","DropIn","Checkout","products","setRun","f","run","undefined","data","setData","loading","success","clientToken","error","instance","address","userId","user","_id","token","getToken","then","console","log","handleAddress","event","target","value","getTotal","reduce","currentValue","nextValue","count","price","showCheckout","showDropIn","deliveryAddress","buy","nonce","getNonce","requestPaymentMethod","paymentData","paymentMethodNonce","amount","response","createOrderData","transaction_id","transaction","id","catch","message","length","authorization","paypal","flow","showError","display","showSuccess","showLoading"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n  getProducts,\r\n  getBraintreeClientToken,\r\n  processPayment,\r\n  createOrder,\r\n} from './apiCore';\r\nimport { emptyCart } from './cartHelpers';\r\nimport Card from './Card';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link } from 'react-router-dom';\r\nimport DropIn from 'braintree-web-drop-in-react';\r\n\r\nconst Checkout = ({ products, setRun = (f) => f, run = undefined }) => {\r\n  const [data, setData] = useState({\r\n    loading: false,\r\n    success: false,\r\n    clientToken: null,\r\n    error: '',\r\n    instance: {},\r\n    address: '',\r\n  });\r\n\r\n  const userId = isAuthenticated() && isAuthenticated().user._id;\r\n  const token = isAuthenticated() && isAuthenticated().token;\r\n\r\n  const getToken = (userId, token) => {\r\n    getBraintreeClientToken(userId, token).then((data) => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n        setData({ ...data, error: data.error });\r\n      } else {\r\n        console.log(data);\r\n        setData({ clientToken: data.clientToken });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getToken(userId, token);\r\n  }, []);\r\n\r\n  const handleAddress = (event) => {\r\n    setData({ ...data, address: event.target.value });\r\n  };\r\n\r\n  const getTotal = () => {\r\n    return products.reduce((currentValue, nextValue) => {\r\n      return currentValue + nextValue.count * nextValue.price;\r\n    }, 0);\r\n  };\r\n\r\n  const showCheckout = () => {\r\n    return isAuthenticated() ? (\r\n      <div>{showDropIn()}</div>\r\n    ) : (\r\n      <Link to='/signin'>\r\n        <Button variant='contained' color='primary'>\r\n          Sign in to checkout\r\n        </Button>\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  let deliveryAddress = data.address;\r\n\r\n  const buy = () => {\r\n    setData({ loading: true });\r\n    // send the nonce to your server\r\n    // nonce = data.instance.requestPaymentMethod()\r\n    let nonce;\r\n    let getNonce = data.instance\r\n      .requestPaymentMethod()\r\n      .then((data) => {\r\n        // console.log(data);\r\n        nonce = data.nonce;\r\n        // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\r\n        // and also total to be charged\r\n        // console.log(\r\n        //     \"send nonce and total to process: \",\r\n        //     nonce,\r\n        //     getTotal(products)\r\n        // );\r\n        const paymentData = {\r\n          paymentMethodNonce: nonce,\r\n          amount: getTotal(products),\r\n        };\r\n\r\n        processPayment(userId, token, paymentData)\r\n          .then((response) => {\r\n            console.log(response);\r\n            // empty cart\r\n            // create order\r\n\r\n            const createOrderData = {\r\n              products: products,\r\n              transaction_id: response.transaction.id,\r\n              amount: response.transaction.amount,\r\n              address: deliveryAddress,\r\n            };\r\n\r\n            createOrder(userId, token, createOrderData)\r\n              .then((response) => {\r\n                emptyCart(() => {\r\n                  setRun(!run); // run useEffect in parent Cart\r\n                  console.log('payment success and empty cart');\r\n                  setData({\r\n                    loading: false,\r\n                    success: true,\r\n                  });\r\n                });\r\n              })\r\n              .catch((error) => {\r\n                console.log(error);\r\n                setData({ loading: false });\r\n              });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            setData({ loading: false });\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        // console.log(\"dropin error: \", error);\r\n        setData({ ...data, error: error.message });\r\n      });\r\n  };\r\n\r\n  const showDropIn = () => (\r\n    <div onBlur={() => setData({ ...data, error: '' })}>\r\n      {data.clientToken !== null && products.length > 0 ? (\r\n        <div>\r\n          <div className='gorm-group mb-3'>\r\n            <label className='text-muted'>Delivery address:</label>\r\n            <textarea\r\n              onChange={handleAddress}\r\n              className='form-control'\r\n              value={data.address}\r\n              placeholder='Type your delivery address here...'\r\n            />\r\n          </div>\r\n\r\n          <DropIn\r\n            options={{\r\n              authorization: data.clientToken,\r\n              paypal: {\r\n                flow: 'vault',\r\n              },\r\n            }}\r\n            onInstance={(instance) => (data.instance = instance)}\r\n          />\r\n          <button onClick={buy} className='btn btn-success btn-block'>\r\n            Pay\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n\r\n  const showError = (error) => (\r\n    <div\r\n      className='alert alert-danger'\r\n      style={{ display: error ? '' : 'none' }}\r\n    >\r\n      {error}\r\n    </div>\r\n  );\r\n\r\n  const showSuccess = (success) => (\r\n    <div\r\n      className='alert alert-info'\r\n      style={{ display: success ? '' : 'none' }}\r\n    >\r\n      Thanks! Your payment was successful!\r\n    </div>\r\n  );\r\n\r\n  const showLoading = (loading) =>\r\n    loading && <h2 className='text-danger'>Loading...</h2>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Total: ${getTotal()}</h2>\r\n      {showLoading(data.loading)}\r\n      {showSuccess(data.success)}\r\n      {showError(data.error)}\r\n      {showCheckout()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"]},"metadata":{},"sourceType":"module"}