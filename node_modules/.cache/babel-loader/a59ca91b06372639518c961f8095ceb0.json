{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dustin\\\\racecity-frontend\\\\src\\\\core\\\\Search.js\";\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { getFilteredProducts } from './apiCore'\n// import Card from './Card'\n// import InputLabel from '@material-ui/core/InputLabel';\n//    import MenuItem from '@material-ui/core/MenuItem';\n//    import FormHelperText from '@material-ui/core/FormHelperText';\n//    import FormControl from '@material-ui/core/FormControl';\n//    import Select from '@material-ui/core/Select';\n//   import TextField from '@material-ui/core/TextField';\n//    import Button from '@material-ui/core/Button';\n//    import SearchIcon from '@material-ui/icons/Search';\n// const Search = () => {\n//   const [allData, setAllData] = useState([]);\n//   const [filteredData, setFilteredData] = useState([allData]);\n//   const handleSearch = (event) => {\n//     let value = event.target.value.toLowerCase();\n//     let result = [];\n//     console.log(value);\n//     result = allData.filter((data) => {\n//       return data.name.search(value) != -1;\n//     });\n//     setFilteredData(result);\n//   };\n//   useEffect(() => {\n//     getFilteredProducts()\n//       .then((response) => {\n//         console.log(response.data);\n//         setAllData(response.data);\n//         setFilteredData(response.data);\n//       })\n//       .catch((error) => {\n//         console.log(\"Error getting fake data: \" + error);\n//       });\n//   }, []);\n//   return (\n//     <div className=\"App\">\n//       <div style={{ margin: \"0 auto\", marginTop: \"10%\" }}>\n//         <label>Search:</label>\n//         <input type=\"text\" onChange={(event) => handleSearch(event)} />\n//       </div>\n//       <div style={{ padding: 10 }}>\n//         {/* {filteredData.map((value, index) => {\n//           return (\n//             <div key={value.index}>\n//               <div >{value.name}</div>\n//             </div>\n//           );\n//         })} */}\n//       </div>\n//     </div>\n//   );\n// };\n// export default Search;\n// import React, { useState, useEffect } from \"react\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import InputLabel from \"@material-ui/core/InputLabel\";\n// import MenuItem from \"@material-ui/core/MenuItem\";\n// import FormHelperText from \"@material-ui/core/FormHelperText\";\n// import FormControl from \"@material-ui/core/FormControl\";\n// import Select from \"@material-ui/core/Select\";\n// import TextField from \"@material-ui/core/TextField\";\n// import Button from \"@material-ui/core/Button\";\n// import SearchIcon from \"@material-ui/icons/Search\";\n// import { getCategories,getFilteredProducts, list } from \"./apiCore\";\n// import Card from \"./Card\";\n// const useStyles = makeStyles((theme) => ({\n//   formControl: {\n//     margin: theme.spacing(1),\n//     minWidth: 120,\n//   },\n//   selectEmpty: {\n//     marginTop: theme.spacing(2),\n//   },\n//   tField: {\n//     width: 800,\n//     marginTop: 2,\n//   },\n//   root: {\n//     \"& > *\": {\n//       margin: theme.spacing(2),\n//     },\n//   },\n// }));\n// const Search = () => {\n//   const [data, setData] = useState({\n//     categories: [],\n//     category: \"\",\n//     search: \"\",\n//     results: [],\n//     searched: false,\n//   });\n//   const { categories, category, search, results, searched } = data;\n//   const loadCategories = () => {\n//     getCategories().then((data) => {\n//       console.log(data);\n//       if (data.error) {\n//         console.log(data.error);\n//       } else {\n//         setData({ ...data, categories: data });\n//       }\n//     });\n//   };\n//   useEffect(() => {\n//     loadCategories();\n//   }, []);\n//   const searchData = () => {\n//     console.log(search, category);\n//     if (search) {\n//       list({ search: search || undefined, category: category }).then(\n//         (response) => {\n//          setData({ ...data, results: response, searched: true });console.log(response)\n//           } \n//       );\n//     }\n//   };\n//   const searchSubmit = (e) => {\n//     e.preventDefault();\n//     searchData();\n//   };\n//   const handleChange = (name) => (event) => {\n//     setData({ ...data, [name]: event.target.value, searched: false });\n//   };\n//   const searchMessage = (searched, results) => {\n//     if (searched && results.length > 0) {\n//       return `Found ${results.length} products`;\n//     }\n//     if (searched && results.length < 1) {\n//       return `Search: No products found`;\n//     }\n//   };\n//   const searchedProducts = (results = []) => {\n//     return (\n//       <div className=\"row\">\n//         <div className=\"col-md-1\"></div>\n//         <div className=\"col-md-10\">\n//           <h2 className=\"mt-4 mb-4 text-center\">\n//             {searchMessage(searched, results)}\n//           </h2>\n//           <div className=\"row\">\n//             {results.map((product, i) => (\n//               <div className=\"col-md-4 mb-3\">\n//                 <Card key={i} product={product} />\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n//         <div className=\"col-md-1\"></div>\n//       </div>\n//     );\n//   };\n//   const classes = useStyles();\n//   const searchForm = () => (\n//     <form onSubmit={searchSubmit} className={classes.root}>\n//       <span className=\"input-group-text\">\n//         <div className=\"input-group input-group-lg\">\n//           <div className=\"input-group-prepend\">\n//             <MenuItem value=\"All\">\n//               <em>All</em>\n//             </MenuItem>\n//           </div>\n//           <TextField\n//             onChange={handleChange(\"search\")}\n//             id=\"outlined-basic\"\n//             label={\n//               <span>\n//                 <SearchIcon />\n//                 Search by name\n//               </span>\n//             }\n//             variant=\"outlined\"\n//             className={classes.tField}\n//             autoComplete=\"off\"\n//           />\n//           <div className=\"ml-3 mt-2\" style={{ border: \"none\" }}>\n//             <Button ml={2} variant=\"contained\" color=\"primary\" type=\"submit\">\n//               Search\n//             </Button>\n//           </div>\n//         </div>\n//       </span>\n//     </form>\n//   );\n//   return (\n//     <div className=\"row\">\n//       <div className=\"container mb-3\">{searchForm()}</div>\n//       <div className=\"container-fluid mb-3\">{searchedProducts(results)}</div>\n//     </div>\n//   );\n// };\n// export default Search;\nimport React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\nconst Search = ({\n  history\n}) => {\n  const [query, setQuery] = useState(\"\");\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (query.trim()) {\n      history.push(`/search/${query}`);\n    } else {\n      history.push(\"/\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitHandler,\n    inline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"q\",\n    onChange: e => setKeyword(e.target.value),\n    placeholder: \"Search Products...\",\n    className: \"mr-sm-2 ml-sm-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"outline-success\",\n    className: \"p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }\n  }, \"Search\"));\n};\n\nexport default Search;","map":{"version":3,"sources":["D:/Dustin/racecity-frontend/src/core/Search.js"],"names":["React","useState","Form","Button","Search","history","query","setQuery","submitHandler","e","preventDefault","trim","push","setKeyword","target","value"],"mappingsgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMO,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIJ,KAAK,CAACK,IAAN,EAAJ,EAAkB;AAChBN,MAAAA,OAAO,CAACO,IAAR,CAAc,WAAUN,KAAM,EAA9B;AACD,KAFD,MAEO;AACLD,MAAAA,OAAO,CAACO,IAAR,CAAa,GAAb;AACD;AACF,GAPD;;AASA,sBACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEJ,aAAhB;AAA+B,IAAA,MAAM,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,GAFP;AAGE,IAAA,QAAQ,EAAGC,CAAD,IAAOI,UAAU,CAACJ,CAAC,CAACK,MAAF,CAASC,KAAV,CAH7B;AAIE,IAAA,WAAW,EAAC,oBAJd;AAKE,IAAA,SAAS,EAAC,iBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAC,iBAA9B;AAAgD,IAAA,SAAS,EAAC,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CADF;AAcD,CA1BD;;AA4BA,eAAeX,MAAf","sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { getFilteredProducts } from './apiCore'\r\n// import Card from './Card'\r\n// import InputLabel from '@material-ui/core/InputLabel';\r\n//    import MenuItem from '@material-ui/core/MenuItem';\r\n//    import FormHelperText from '@material-ui/core/FormHelperText';\r\n//    import FormControl from '@material-ui/core/FormControl';\r\n//    import Select from '@material-ui/core/Select';\r\n//   import TextField from '@material-ui/core/TextField';\r\n//    import Button from '@material-ui/core/Button';\r\n//    import SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\n\r\n// const Search = () => {\r\n//   const [allData, setAllData] = useState([]);\r\n//   const [filteredData, setFilteredData] = useState([allData]);\r\n\r\n//   const handleSearch = (event) => {\r\n//     let value = event.target.value.toLowerCase();\r\n//     let result = [];\r\n//     console.log(value);\r\n//     result = allData.filter((data) => {\r\n//       return data.name.search(value) != -1;\r\n//     });\r\n//     setFilteredData(result);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     getFilteredProducts()\r\n//       .then((response) => {\r\n//         console.log(response.data);\r\n//         setAllData(response.data);\r\n//         setFilteredData(response.data);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(\"Error getting fake data: \" + error);\r\n//       });\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <div style={{ margin: \"0 auto\", marginTop: \"10%\" }}>\r\n//         <label>Search:</label>\r\n//         <input type=\"text\" onChange={(event) => handleSearch(event)} />\r\n//       </div>\r\n//       <div style={{ padding: 10 }}>\r\n//         {/* {filteredData.map((value, index) => {\r\n//           return (\r\n//             <div key={value.index}>\r\n//               <div >{value.name}</div>\r\n//             </div>\r\n//           );\r\n//         })} */}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Search;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\n// import InputLabel from \"@material-ui/core/InputLabel\";\r\n// import MenuItem from \"@material-ui/core/MenuItem\";\r\n// import FormHelperText from \"@material-ui/core/FormHelperText\";\r\n// import FormControl from \"@material-ui/core/FormControl\";\r\n// import Select from \"@material-ui/core/Select\";\r\n// import TextField from \"@material-ui/core/TextField\";\r\n// import Button from \"@material-ui/core/Button\";\r\n// import SearchIcon from \"@material-ui/icons/Search\";\r\n\r\n// import { getCategories,getFilteredProducts, list } from \"./apiCore\";\r\n// import Card from \"./Card\";\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   formControl: {\r\n//     margin: theme.spacing(1),\r\n//     minWidth: 120,\r\n//   },\r\n//   selectEmpty: {\r\n//     marginTop: theme.spacing(2),\r\n//   },\r\n//   tField: {\r\n//     width: 800,\r\n//     marginTop: 2,\r\n//   },\r\n//   root: {\r\n//     \"& > *\": {\r\n//       margin: theme.spacing(2),\r\n//     },\r\n//   },\r\n// }));\r\n\r\n// const Search = () => {\r\n//   const [data, setData] = useState({\r\n//     categories: [],\r\n//     category: \"\",\r\n//     search: \"\",\r\n//     results: [],\r\n//     searched: false,\r\n//   });\r\n\r\n//   const { categories, category, search, results, searched } = data;\r\n\r\n//   const loadCategories = () => {\r\n//     getCategories().then((data) => {\r\n//       console.log(data);\r\n//       if (data.error) {\r\n//         console.log(data.error);\r\n//       } else {\r\n//         setData({ ...data, categories: data });\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     loadCategories();\r\n//   }, []);\r\n\r\n//   const searchData = () => {\r\n//     console.log(search, category);\r\n//     if (search) {\r\n//       list({ search: search || undefined, category: category }).then(\r\n        \r\n//         (response) => {\r\n//          setData({ ...data, results: response, searched: true });console.log(response)\r\n            \r\n//           } \r\n//       );\r\n//     }\r\n//   };\r\n\r\n//   const searchSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     searchData();\r\n//   };\r\n\r\n//   const handleChange = (name) => (event) => {\r\n//     setData({ ...data, [name]: event.target.value, searched: false });\r\n//   };\r\n\r\n//   const searchMessage = (searched, results) => {\r\n//     if (searched && results.length > 0) {\r\n//       return `Found ${results.length} products`;\r\n//     }\r\n//     if (searched && results.length < 1) {\r\n//       return `Search: No products found`;\r\n//     }\r\n//   };\r\n\r\n//   const searchedProducts = (results = []) => {\r\n//     return (\r\n//       <div className=\"row\">\r\n//         <div className=\"col-md-1\"></div>\r\n//         <div className=\"col-md-10\">\r\n//           <h2 className=\"mt-4 mb-4 text-center\">\r\n//             {searchMessage(searched, results)}\r\n//           </h2>\r\n//           <div className=\"row\">\r\n//             {results.map((product, i) => (\r\n//               <div className=\"col-md-4 mb-3\">\r\n//                 <Card key={i} product={product} />\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"col-md-1\"></div>\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   const classes = useStyles();\r\n\r\n//   const searchForm = () => (\r\n//     <form onSubmit={searchSubmit} className={classes.root}>\r\n//       <span className=\"input-group-text\">\r\n//         <div className=\"input-group input-group-lg\">\r\n//           <div className=\"input-group-prepend\">\r\n//             <MenuItem value=\"All\">\r\n//               <em>All</em>\r\n//             </MenuItem>\r\n//           </div>\r\n\r\n//           <TextField\r\n//             onChange={handleChange(\"search\")}\r\n//             id=\"outlined-basic\"\r\n//             label={\r\n//               <span>\r\n//                 <SearchIcon />\r\n//                 Search by name\r\n//               </span>\r\n//             }\r\n//             variant=\"outlined\"\r\n//             className={classes.tField}\r\n//             autoComplete=\"off\"\r\n//           />\r\n\r\n//           <div className=\"ml-3 mt-2\" style={{ border: \"none\" }}>\r\n//             <Button ml={2} variant=\"contained\" color=\"primary\" type=\"submit\">\r\n//               Search\r\n//             </Button>\r\n//           </div>\r\n//         </div>\r\n//       </span>\r\n//     </form>\r\n//   );\r\n\r\n//   return (\r\n//     <div className=\"row\">\r\n//       <div className=\"container mb-3\">{searchForm()}</div>\r\n//       <div className=\"container-fluid mb-3\">{searchedProducts(results)}</div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Search;\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nconst Search = ({ history }) => {\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (query.trim()) {\r\n      history.push(`/search/${query}`);\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler} inline>\r\n      <Form.Control\r\n        type=\"text\"\r\n        name=\"q\"\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        placeholder=\"Search Products...\"\r\n        className=\"mr-sm-2 ml-sm-5\"\r\n      ></Form.Control>\r\n      <Button type=\"submit\" variant=\"outline-success\" className=\"p-2\">\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}