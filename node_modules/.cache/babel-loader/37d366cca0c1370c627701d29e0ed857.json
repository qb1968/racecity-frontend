{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dustin\\\\racecity-frontend\\\\src\\\\core\\\\Search.js\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { getCategories, list } from './apiCore';\nimport Card from './Card';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  tField: {\n    width: 800,\n    marginTop: 2\n  },\n  root: {\n    '& > *': {\n      margin: theme.spacing(2)\n    }\n  }\n}));\n\nconst Search = () => {\n  const [data, setData] = useState({\n    categories: [],\n    category: '',\n    search: '',\n    results: [],\n    searched: false\n  });\n  const {\n    categories,\n    category,\n    search,\n    results,\n    searched\n  } = data;\n\n  const loadCategories = () => {\n    getCategories().then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setData({ ...data,\n          categories: data\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    loadCategories();\n  }, []);\n\n  const searchData = () => {\n    // console.log(search, category);\n    if (search) {\n      list({\n        search: search || undefined,\n        category: category\n      }).then(response => {\n        if (response.error) {\n          console.log(response.error);\n        } else {\n          setData({ ...data,\n            results: response,\n            searched: true\n          });\n        }\n      });\n    }\n  };\n\n  const searchSubmit = e => {\n    e.preventDefault();\n    searchData();\n  };\n\n  const handleChange = name => event => {\n    setData({ ...data,\n      [name]: event.target.value,\n      searched: false\n    });\n  };\n\n  const searchMessage = (searched, results) => {\n    if (searched && results.length > 0) {\n      return `Found ${results.length} products`;\n    }\n\n    if (searched && results.length < 1) {\n      return `Search: No products found`;\n    }\n  }; //   const searchedProducts = (results = []) => {\n\n\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, \"Mark\") //       <div className='row'>\n  //         <div className='col-md-1'></div>\n  //         <div className='col-md-10'>\n  //           <h2 className='mt-4 mb-4 text-center'>{searchMessage(searched, results)}</h2>\n  //           <div className='row'>\n  //             {results.map((product, i) => (\n  //               <div className='col-md-4 mb-3'>\n  //                 <Card key={i} product={product} />\n  //               </div>\n  //             ))}\n  //           </div>\n  //         </div>\n  //         <div className='col-md-1'></div>\n  //       </div>\n  //     );\n  //   };\n  //   const classes = useStyles();\n  //   const searchForm = () => (\n  //     <form onSubmit={searchSubmit} className={classes.root}>\n  //       <span className='input-group-text'>\n  //         <div className='input-group input-group-lg'>\n  //           <div className='input-group-prepend'>\n  //             {/* <FormControl className={classes.formControl}>\n  //               <InputLabel id='demo-simple-select-helper-label'>\n  //                 Select\n  //               </InputLabel>\n  //               <Select\n  //                 labelId='demo-simple-select-placeholder-label-label'\n  //                 id='demo-simple-select-placeholder-label'\n  //                 value={data.name}\n  //                 onChange={handleChange('category')}\n  //                 displayEmpty\n  //                 className={classes.selectEmpty}\n  //               > */}\n  //                 <MenuItem value='All'>\n  //                   <em>All</em>\n  //                 </MenuItem>\n  //                 {/* {categories.map((c, i) => (\n  //                   <MenuItem key={i} value={c._id}>\n  //                     {c.name}\n  //                   </MenuItem>\n  //                 ))} */}\n  //               {/* </Select>\n  //             </FormControl> */}\n  //           </div>\n  //           <TextField\n  //             onChange={handleChange('search')}\n  //             id='outlined-basic'\n  //             label={<span><SearchIcon/>Search by name</span>}\n  //             variant='outlined'\n  //             className={classes.tField}\n  //             autoComplete='off'\n  //           />\n  //           <div className='ml-3 mt-2' style={{ border: 'none' }}>\n  //             <Button ml={2} variant='contained' color='primary' type='submit'>\n  //               Search\n  //             </Button>\n  //           </div>\n  //         </div>\n  //       </span>\n  //     </form>\n  //   );\n  //   return (\n  //     <div className='row'>\n  //       <div className='container mb-3'>{searchForm()}</div>\n  //       <div className='container-fluid mb-3'>{searchedProducts(results)}</div>\n  //     </div>\n  ;\n};\n\nexport default Search;","map":{"version":3,"sources":["D:/Dustin/racecity-frontend/src/core/Search.js"],"names":["React","useState","useEffect","makeStyles","InputLabel","MenuItem","FormHelperText","FormControl","Select","TextField","Button","SearchIcon","getCategories","list","Card","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","tField","width","root","Search","data","setData","categories","category","search","results","searched","loadCategories","then","error","console","log","searchData","undefined","response","searchSubmit","e","preventDefault","handleChange","name","event","target","value","searchMessage","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAEA,SAASC,aAAT,EAAwBC,IAAxB,QAAoC,WAApC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,SAAS,GAAGZ,UAAU,CAAEa,KAAD,KAAY;AACvCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADG;AAEXC,IAAAA,QAAQ,EAAE;AAFC,GAD0B;AAKvCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,SAAS,EAAEN,KAAK,CAACG,OAAN,CAAc,CAAd;AADA,GAL0B;AAQvCI,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,GADD;AAENF,IAAAA,SAAS,EAAE;AAFL,GAR+B;AAYvCG,EAAAA,IAAI,EAAE;AACJ,aAAS;AACPP,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADD;AADL;AAZiC,CAAZ,CAAD,CAA5B;;AAmBA,MAAMO,MAAM,GAAG,MAAM;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB3B,QAAQ,CAAC;AAC/B4B,IAAAA,UAAU,EAAE,EADmB;AAE/BC,IAAAA,QAAQ,EAAE,EAFqB;AAG/BC,IAAAA,MAAM,EAAE,EAHuB;AAI/BC,IAAAA,OAAO,EAAE,EAJsB;AAK/BC,IAAAA,QAAQ,EAAE;AALqB,GAAD,CAAhC;AAQA,QAAM;AAAEJ,IAAAA,UAAF;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA,MAAxB;AAAgCC,IAAAA,OAAhC;AAAyCC,IAAAA;AAAzC,MAAsDN,IAA5D;;AAEA,QAAMO,cAAc,GAAG,MAAM;AAC3BtB,IAAAA,aAAa,GAAGuB,IAAhB,CAAsBR,IAAD,IAAU;AAC7B,UAAIA,IAAI,CAACS,KAAT,EAAgB;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYX,IAAI,CAACS,KAAjB;AACD,OAFD,MAEO;AACLR,QAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWE,UAAAA,UAAU,EAAEF;AAAvB,SAAD,CAAP;AACD;AACF,KAND;AAOD,GARD;;AAUAzB,EAAAA,SAAS,CAAC,MAAM;AACdgC,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMK,UAAU,GAAG,MAAM;AACvB;AACA,QAAIR,MAAJ,EAAY;AACVlB,MAAAA,IAAI,CAAC;AAAEkB,QAAAA,MAAM,EAAEA,MAAM,IAAIS,SAApB;AAA+BV,QAAAA,QAAQ,EAAEA;AAAzC,OAAD,CAAJ,CAA0DK,IAA1D,CACGM,QAAD,IAAc;AACZ,YAAIA,QAAQ,CAACL,KAAb,EAAoB;AAClBC,UAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACL,KAArB;AACD,SAFD,MAEO;AACLR,UAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWK,YAAAA,OAAO,EAAES,QAApB;AAA8BR,YAAAA,QAAQ,EAAE;AAAxC,WAAD,CAAP;AACD;AACF,OAPH;AASD;AACF,GAbD;;AAeA,QAAMS,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,UAAU;AACX,GAHD;;AAKA,QAAMM,YAAY,GAAIC,IAAD,IAAWC,KAAD,IAAW;AACxCnB,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,OAACmB,IAAD,GAAQC,KAAK,CAACC,MAAN,CAAaC,KAAhC;AAAuChB,MAAAA,QAAQ,EAAE;AAAjD,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMiB,aAAa,GAAG,CAACjB,QAAD,EAAWD,OAAX,KAAuB;AAC3C,QAAIC,QAAQ,IAAID,OAAO,CAACmB,MAAR,GAAiB,CAAjC,EAAoC;AAClC,aAAQ,SAAQnB,OAAO,CAACmB,MAAO,WAA/B;AACD;;AACD,QAAIlB,QAAQ,IAAID,OAAO,CAACmB,MAAR,GAAiB,CAAjC,EAAoC;AAClC,aAAQ,2BAAR;AACD;AACF,GAPD,CAjDmB,CA0DrB;;;AACE,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAzEE;AA2EA,CAtIF;;AAwIA,eAAezB,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { getCategories, list } from './apiCore';\r\nimport Card from './Card';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  tField: {\r\n    width: 800,\r\n    marginTop: 2,\r\n  },\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst Search = () => {\r\n  const [data, setData] = useState({\r\n    categories: [],\r\n    category: '',\r\n    search: '',\r\n    results: [],\r\n    searched: false,\r\n  });\r\n\r\n  const { categories, category, search, results, searched } = data;\r\n\r\n  const loadCategories = () => {\r\n    getCategories().then((data) => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        setData({ ...data, categories: data });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCategories();\r\n  }, []);\r\n\r\n  const searchData = () => {\r\n    // console.log(search, category);\r\n    if (search) {\r\n      list({ search: search || undefined, category: category }).then(\r\n        (response) => {\r\n          if (response.error) {\r\n            console.log(response.error);\r\n          } else {\r\n            setData({ ...data, results: response, searched: true });\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const searchSubmit = (e) => {\r\n    e.preventDefault();\r\n    searchData();\r\n  };\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setData({ ...data, [name]: event.target.value, searched: false });\r\n  };\r\n\r\n  const searchMessage = (searched, results) => {\r\n    if (searched && results.length > 0) {\r\n      return `Found ${results.length} products`;\r\n    }\r\n    if (searched && results.length < 1) {\r\n      return `Search: No products found`;\r\n    }\r\n  };\r\n\r\n//   const searchedProducts = (results = []) => {\r\n  return (\r\n      <h1>Mark</h1>\r\n//       <div className='row'>\r\n//         <div className='col-md-1'></div>\r\n//         <div className='col-md-10'>\r\n//           <h2 className='mt-4 mb-4 text-center'>{searchMessage(searched, results)}</h2>\r\n//           <div className='row'>\r\n//             {results.map((product, i) => (\r\n//               <div className='col-md-4 mb-3'>\r\n//                 <Card key={i} product={product} />\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//         <div className='col-md-1'></div>\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   const classes = useStyles();\r\n\r\n//   const searchForm = () => (\r\n//     <form onSubmit={searchSubmit} className={classes.root}>\r\n//       <span className='input-group-text'>\r\n//         <div className='input-group input-group-lg'>\r\n//           <div className='input-group-prepend'>\r\n//             {/* <FormControl className={classes.formControl}>\r\n//               <InputLabel id='demo-simple-select-helper-label'>\r\n//                 Select\r\n//               </InputLabel>\r\n//               <Select\r\n//                 labelId='demo-simple-select-placeholder-label-label'\r\n//                 id='demo-simple-select-placeholder-label'\r\n//                 value={data.name}\r\n//                 onChange={handleChange('category')}\r\n//                 displayEmpty\r\n//                 className={classes.selectEmpty}\r\n//               > */}\r\n//                 <MenuItem value='All'>\r\n//                   <em>All</em>\r\n//                 </MenuItem>\r\n//                 {/* {categories.map((c, i) => (\r\n//                   <MenuItem key={i} value={c._id}>\r\n//                     {c.name}\r\n//                   </MenuItem>\r\n//                 ))} */}\r\n//               {/* </Select>\r\n//             </FormControl> */}\r\n//           </div>\r\n\r\n//           <TextField\r\n//             onChange={handleChange('search')}\r\n//             id='outlined-basic'\r\n//             label={<span><SearchIcon/>Search by name</span>}\r\n//             variant='outlined'\r\n//             className={classes.tField}\r\n//             autoComplete='off'\r\n//           />\r\n\r\n//           <div className='ml-3 mt-2' style={{ border: 'none' }}>\r\n//             <Button ml={2} variant='contained' color='primary' type='submit'>\r\n//               Search\r\n//             </Button>\r\n//           </div>\r\n//         </div>\r\n//       </span>\r\n//     </form>\r\n//   );\r\n\r\n//   return (\r\n//     <div className='row'>\r\n//       <div className='container mb-3'>{searchForm()}</div>\r\n//       <div className='container-fluid mb-3'>{searchedProducts(results)}</div>\r\n//     </div>\r\n   );\r\n };\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}