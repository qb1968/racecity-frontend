{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dustin\\\\racecity-frontend\\\\src\\\\core\\\\Search.js\";\n\n// import React, { useState, useEffect } from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import InputLabel from '@material-ui/core/InputLabel';\n// import MenuItem from '@material-ui/core/MenuItem';\n// import FormHelperText from '@material-ui/core/FormHelperText';\n// import FormControl from '@material-ui/core/FormControl';\n// import Select from '@material-ui/core/Select';\n// import TextField from '@material-ui/core/TextField';\n// import Button from '@material-ui/core/Button';\n// import SearchIcon from '@material-ui/icons/Search';\n// import { getCategories, list } from './apiCore';\n// import Card from './Card';\n// const useStyles = makeStyles((theme) => ({\n//   formControl: {\n//     margin: theme.spacing(1),\n//     minWidth: 120,\n//   },\n//   selectEmpty: {\n//     marginTop: theme.spacing(2),\n//   },\n//   tField: {\n//     width: 800,\n//     marginTop: 2,\n//   },\n//   root: {\n//     '& > *': {\n//       margin: theme.spacing(2),\n//     },\n//   },\n// }));\n// const Search = () => {\n//   const [data, setData] = useState({\n//     categories: [],\n//     category: '',\n//     search: '',\n//     results: [],\n//     searched: false,\n//   });\n//   const { categories, category, search, results, searched } = data;\n//   const loadCategories = () => {\n//     getCategories().then((data) => {\n//       if (data.error) {\n//         console.log(data.error);\n//       } else {\n//         setData({ ...data, categories: data });\n//       }\n//     });\n//   };\n//   useEffect(() => {\n//     loadCategories();\n//   }, []);\n//   const searchData = () => {\n//     // console.log(search, category);\n//     if (search) {\n//       list({ search: search || undefined, category: category }).then(\n//         (response) => {\n//           if (response.error) {\n//             console.log(response.error);\n//           } else {\n//             setData({ ...data, results: response, searched: true });\n//           }\n//         }\n//       );\n//     }\n//   };\n//   const searchSubmit = (e) => {\n//     e.preventDefault();\n//     searchData();\n//   };\n//   const handleChange = (name) => (event) => {\n//     setData({ ...data, [name]: event.target.value, searched: false });\n//   };\n//   const searchMessage = (searched, results) => {\n//     if (searched && results.length > 0) {\n//       return `Found ${results.length} products`;\n//     }\n//     if (searched && results.length < 1) {\n//       return `Search: No products found`;\n//     }\n//   };\n//   const searchedProducts = (results = []) => {\n//     return (\n//       <div className='row'>\n//         <div className='col-md-1'></div>\n//         <div className='col-md-10'>\n//           <h2 className='mt-4 mb-4 text-center'>{searchMessage(searched, results)}</h2>\n//           <div className='row'>\n//             {results.map((product, i) => (\n//               <div className='col-md-4 mb-3'>\n//                 <Card key={i} product={product} />\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n//         <div className='col-md-1'></div>\n//       </div>\n//     );\n//   };\n//   const classes = useStyles();\n//   const searchForm = () => (\n//     <form onSubmit={searchSubmit} className={classes.root}>\n//       <span className='input-group-text'>\n//         <div className='input-group input-group-lg'>\n//           <div className='input-group-prepend'>\n//             <FormControl className={classes.formControl}>\n//               <InputLabel id='demo-simple-select-helper-label'>\n//                 Select\n//               </InputLabel>\n//               <Select\n//                 labelId='demo-simple-select-placeholder-label-label'\n//                 id='demo-simple-select-placeholder-label'\n//                 value={data.name}\n//                 onChange={handleChange('category')}\n//                 displayEmpty\n//                 className={classes.selectEmpty}\n//               >\n//                 <MenuItem value='All'>\n//                   <em>All</em>\n//                 </MenuItem>\n//                 {categories.map((c, i) => (\n//                   <MenuItem key={i} value={c._id}>\n//                     {c.name}\n//                   </MenuItem>\n//                 ))}\n//               </Select>\n//             </FormControl>\n//           </div>\n//           <TextField\n//             onChange={handleChange('search')}\n//             id='outlined-basic'\n//             label={<span><SearchIcon/>Search by name</span>}\n//             variant='outlined'\n//             className={classes.tField}\n//             autoComplete='off'\n//           />\n//           <div className='ml-3 mt-2' style={{ border: 'none' }}>\n//             <Button ml={2} variant='contained' color='primary' type='submit'>\n//               Search\n//             </Button>\n//           </div>\n//         </div>\n//       </span>\n//     </form>\n//   );\n//   return (\n//     <div className='row'>\n//       <div className='container mb-3'>{searchForm()}</div>\n//       <div className='container-fluid mb-3'>{searchedProducts(results)}</div>\n//     </div>\n//   );\n// };\n// export default Search;\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      post: [],\n      allPosts: []\n    };\n\n    this._onKeyUp = e => {\n      // filter post list by title using onKeyUp function\n      const post = this.state.allPosts.filter(item => item.title.rendered.toLowerCase().includes(e.target.value.toLowerCase()));\n      this.setState({\n        post\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(URL, {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        post: data,\n        allPosts: data // array data from JSON stored in these\n\n      });\n    }).catch(err => {});\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-outer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      role: \"search\",\n      method: \"get\",\n      id: \"searchform\",\n      className: \"searchform\",\n      action: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"search\",\n      onChange: this._onKeyUp,\n      name: \"s\",\n      id: \"s\",\n      placeholder: \"Search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      id: \"searchsubmit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-search\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"data-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }\n    }, this.state.post.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n      className: \"block-\" + index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"title\",\n      href: item.link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }\n    }, item.title.rendered)), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"link\",\n      href: item.link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["D:/Dustin/racecity-frontend/src/core/Search.js"],"names":["App","React","Component","state","post","allPosts","_onKeyUp","e","filter","item","title","rendered","toLowerCase","includes","target","value","setState","componentDidMount","axios","get","URL","headers","Accept","then","data","catch","err","render","map","index","link"],"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","sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import InputLabel from '@material-ui/core/InputLabel';\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\n// import FormHelperText from '@material-ui/core/FormHelperText';\r\n// import FormControl from '@material-ui/core/FormControl';\r\n// import Select from '@material-ui/core/Select';\r\n// import TextField from '@material-ui/core/TextField';\r\n// import Button from '@material-ui/core/Button';\r\n// import SearchIcon from '@material-ui/icons/Search';\r\n\r\n// import { getCategories, list } from './apiCore';\r\n// import Card from './Card';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   formControl: {\r\n//     margin: theme.spacing(1),\r\n//     minWidth: 120,\r\n//   },\r\n//   selectEmpty: {\r\n//     marginTop: theme.spacing(2),\r\n//   },\r\n//   tField: {\r\n//     width: 800,\r\n//     marginTop: 2,\r\n//   },\r\n//   root: {\r\n//     '& > *': {\r\n//       margin: theme.spacing(2),\r\n//     },\r\n//   },\r\n// }));\r\n\r\n// const Search = () => {\r\n//   const [data, setData] = useState({\r\n//     categories: [],\r\n//     category: '',\r\n//     search: '',\r\n//     results: [],\r\n//     searched: false,\r\n//   });\r\n\r\n//   const { categories, category, search, results, searched } = data;\r\n\r\n//   const loadCategories = () => {\r\n//     getCategories().then((data) => {\r\n//       if (data.error) {\r\n//         console.log(data.error);\r\n//       } else {\r\n//         setData({ ...data, categories: data });\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     loadCategories();\r\n//   }, []);\r\n\r\n//   const searchData = () => {\r\n//     // console.log(search, category);\r\n//     if (search) {\r\n//       list({ search: search || undefined, category: category }).then(\r\n//         (response) => {\r\n//           if (response.error) {\r\n//             console.log(response.error);\r\n//           } else {\r\n//             setData({ ...data, results: response, searched: true });\r\n//           }\r\n//         }\r\n//       );\r\n//     }\r\n//   };\r\n\r\n//   const searchSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     searchData();\r\n//   };\r\n\r\n//   const handleChange = (name) => (event) => {\r\n//     setData({ ...data, [name]: event.target.value, searched: false });\r\n//   };\r\n\r\n//   const searchMessage = (searched, results) => {\r\n//     if (searched && results.length > 0) {\r\n//       return `Found ${results.length} products`;\r\n//     }\r\n//     if (searched && results.length < 1) {\r\n//       return `Search: No products found`;\r\n//     }\r\n//   };\r\n\r\n//   const searchedProducts = (results = []) => {\r\n//     return (\r\n//       <div className='row'>\r\n//         <div className='col-md-1'></div>\r\n//         <div className='col-md-10'>\r\n//           <h2 className='mt-4 mb-4 text-center'>{searchMessage(searched, results)}</h2>\r\n//           <div className='row'>\r\n//             {results.map((product, i) => (\r\n//               <div className='col-md-4 mb-3'>\r\n//                 <Card key={i} product={product} />\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//         <div className='col-md-1'></div>\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   const classes = useStyles();\r\n\r\n//   const searchForm = () => (\r\n//     <form onSubmit={searchSubmit} className={classes.root}>\r\n//       <span className='input-group-text'>\r\n//         <div className='input-group input-group-lg'>\r\n//           <div className='input-group-prepend'>\r\n//             <FormControl className={classes.formControl}>\r\n//               <InputLabel id='demo-simple-select-helper-label'>\r\n//                 Select\r\n//               </InputLabel>\r\n//               <Select\r\n//                 labelId='demo-simple-select-placeholder-label-label'\r\n//                 id='demo-simple-select-placeholder-label'\r\n//                 value={data.name}\r\n//                 onChange={handleChange('category')}\r\n//                 displayEmpty\r\n//                 className={classes.selectEmpty}\r\n//               >\r\n//                 <MenuItem value='All'>\r\n//                   <em>All</em>\r\n//                 </MenuItem>\r\n//                 {categories.map((c, i) => (\r\n//                   <MenuItem key={i} value={c._id}>\r\n//                     {c.name}\r\n//                   </MenuItem>\r\n//                 ))}\r\n//               </Select>\r\n//             </FormControl>\r\n//           </div>\r\n\r\n//           <TextField\r\n//             onChange={handleChange('search')}\r\n//             id='outlined-basic'\r\n//             label={<span><SearchIcon/>Search by name</span>}\r\n//             variant='outlined'\r\n//             className={classes.tField}\r\n//             autoComplete='off'\r\n//           />\r\n\r\n//           <div className='ml-3 mt-2' style={{ border: 'none' }}>\r\n//             <Button ml={2} variant='contained' color='primary' type='submit'>\r\n//               Search\r\n//             </Button>\r\n//           </div>\r\n//         </div>\r\n//       </span>\r\n//     </form>\r\n//   );\r\n\r\n//   return (\r\n//     <div className='row'>\r\n//       <div className='container mb-3'>{searchForm()}</div>\r\n//       <div className='container-fluid mb-3'>{searchedProducts(results)}</div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Search;\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    post: [],\r\n    allPosts: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(URL, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then(({ data }) => {\r\n        this.setState({\r\n          post: data,\r\n          allPosts: data, // array data from JSON stored in these\r\n        });\r\n      })\r\n      .catch((err) => {});\r\n  }\r\n\r\n  _onKeyUp = (e) => {\r\n    // filter post list by title using onKeyUp function\r\n    const post = this.state.allPosts.filter((item) =>\r\n      item.title.rendered.toLowerCase().includes(e.target.value.toLowerCase())\r\n    );\r\n    this.setState({ post });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"search-outer\">\r\n          <form\r\n            role=\"search\"\r\n            method=\"get\"\r\n            id=\"searchform\"\r\n            className=\"searchform\"\r\n            action=\"\"\r\n          >\r\n            {/* input field activates onKeyUp function on state change */}\r\n            <input\r\n              type=\"search\"\r\n              onChange={this._onKeyUp}\r\n              name=\"s\"\r\n              id=\"s\"\r\n              placeholder=\"Search\"\r\n            />\r\n            <button type=\"submit\" id=\"searchsubmit\">\r\n              <i className=\"fa fa-search\" aria-hidden=\"true\" />\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <ul className=\"data-list\">\r\n          {/* post items mapped in a list linked to onKeyUp function */}\r\n          {this.state.post.map((item, index) => (\r\n            <li className={\"block-\" + index}>\r\n              <a className=\"title\" href={item.link}>\r\n                <h3>{item.title.rendered}</h3>\r\n              </a>\r\n              <a className=\"link\" href={item.link}></a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}