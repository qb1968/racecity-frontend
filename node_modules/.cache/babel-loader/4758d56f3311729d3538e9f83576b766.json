{"ast":null,"code":"import _toConsumableArray from\"D:\\\\Dustin\\\\racecity-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"D:\\\\Dustin\\\\racecity-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import CheckboxM from'@material-ui/core/Checkbox';var Checkbox=function Checkbox(_ref){var categories=_ref.categories,handleFilters=_ref.handleFilters;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),checked=_useState2[0],setCheked=_useState2[1];var handleToggle=function handleToggle(c){return function(){// return the first index or -1\nvar currentCategoryId=checked.indexOf(c);var newCheckedCategoryId=_toConsumableArray(checked);// if currently checked was not already in checked state > push\n// else pull/take off\nif(currentCategoryId===-1){newCheckedCategoryId.push(c);}else{newCheckedCategoryId.splice(currentCategoryId,1);}// console.log(newCheckedCategoryId);\nsetCheked(newCheckedCategoryId);handleFilters(newCheckedCategoryId);};};return categories.map(function(c,i){return/*#__PURE__*/React.createElement(\"li\",{key:i,className:\"list-unstyled\"},/*#__PURE__*/React.createElement(CheckboxM,{onChange:handleToggle(c._id),value:checked.indexOf(c._id===-1)}),/*#__PURE__*/React.createElement(\"label\",{className:\"form-check-label\"},c.name));});};export default Checkbox;","map":{"version":3,"sources":["D:/Dustin/racecity-frontend/src/core/Checkbox.js"],"names":["React","useState","CheckboxM","Checkbox","categories","handleFilters","checked","setCheked","handleToggle","c","currentCategoryId","indexOf","newCheckedCategoryId","push","splice","map","i","_id","name"],"mappings":"0TAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,SAAP,KAAsB,4BAAtB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAmC,IAAhCC,CAAAA,UAAgC,MAAhCA,UAAgC,CAApBC,aAAoB,MAApBA,aAAoB,CAClD,cAA6BJ,QAAQ,CAAC,EAAD,CAArC,wCAAOK,OAAP,eAAgBC,SAAhB,eAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,QAAO,WAAM,CAChC;AACA,GAAMC,CAAAA,iBAAiB,CAAGJ,OAAO,CAACK,OAAR,CAAgBF,CAAhB,CAA1B,CACA,GAAMG,CAAAA,oBAAoB,oBAAON,OAAP,CAA1B,CACA;AACA;AACA,GAAII,iBAAiB,GAAK,CAAC,CAA3B,CAA8B,CAC5BE,oBAAoB,CAACC,IAArB,CAA0BJ,CAA1B,EACD,CAFD,IAEO,CACLG,oBAAoB,CAACE,MAArB,CAA4BJ,iBAA5B,CAA+C,CAA/C,EACD,CACD;AACAH,SAAS,CAACK,oBAAD,CAAT,CACAP,aAAa,CAACO,oBAAD,CAAb,CACD,CAdoB,EAArB,CAgBA,MAAOR,CAAAA,UAAU,CAACW,GAAX,CAAe,SAACN,CAAD,CAAIO,CAAJ,qBACpB,0BAAI,GAAG,CAAEA,CAAT,CAAY,SAAS,CAAC,eAAtB,eACE,oBAAC,SAAD,EACE,QAAQ,CAAER,YAAY,CAACC,CAAC,CAACQ,GAAH,CADxB,CAEE,KAAK,CAAEX,OAAO,CAACK,OAAR,CAAgBF,CAAC,CAACQ,GAAF,GAAU,CAAC,CAA3B,CAFT,EADF,cAKE,6BAAO,SAAS,CAAC,kBAAjB,EAAqCR,CAAC,CAACS,IAAvC,CALF,CADoB,EAAf,CAAP,CASD,CA5BD,CA8BA,cAAef,CAAAA,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport CheckboxM from '@material-ui/core/Checkbox';\r\n\r\nconst Checkbox = ({ categories, handleFilters }) => {\r\n  const [checked, setCheked] = useState([]);\r\n\r\n  const handleToggle = (c) => () => {\r\n    // return the first index or -1\r\n    const currentCategoryId = checked.indexOf(c);\r\n    const newCheckedCategoryId = [...checked];\r\n    // if currently checked was not already in checked state > push\r\n    // else pull/take off\r\n    if (currentCategoryId === -1) {\r\n      newCheckedCategoryId.push(c);\r\n    } else {\r\n      newCheckedCategoryId.splice(currentCategoryId, 1);\r\n    }\r\n    // console.log(newCheckedCategoryId);\r\n    setCheked(newCheckedCategoryId);\r\n    handleFilters(newCheckedCategoryId);\r\n  };\r\n\r\n  return categories.map((c, i) => (\r\n    <li key={i} className='list-unstyled'>\r\n      <CheckboxM\r\n        onChange={handleToggle(c._id)}\r\n        value={checked.indexOf(c._id === -1)}\r\n      />\r\n      <label className='form-check-label'>{c.name}</label>\r\n    </li>\r\n  ));\r\n};\r\n\r\nexport default Checkbox;\r\n"]},"metadata":{},"sourceType":"module"}