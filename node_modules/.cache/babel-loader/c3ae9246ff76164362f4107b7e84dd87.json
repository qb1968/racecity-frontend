{"ast":null,"code":"import{API}from'../config';export var read=function read(userId,token){return fetch(\"\".concat(API,\"/user/\").concat(userId),{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json',Authorization:\"Bearer \".concat(token)}}).then(function(response){return response.json();}).catch(function(err){return console.log(err);});};export var update=function update(userId,token,user){return fetch(\"\".concat(API,\"/user/\").concat(userId),{method:'PUT',headers:{Accept:'application/json','Content-Type':'application/json',Authorization:\"Bearer \".concat(token)},body:JSON.stringify(user)}).then(function(response){return response.json();}).catch(function(err){return console.log(err);});};export var updateUser=function updateUser(user,next){if(typeof window!=='undefined'){if(localStorage.getItem('jwt')){var auth=JSON.parse(localStorage.getItem('jwt'));auth.user=user;localStorage.setItem('jwt',JSON.stringify(auth));next();}}};export var getPurchaseHistory=function getPurchaseHistory(userId,token){return fetch(\"\".concat(API,\"/orders/by/user/\").concat(userId),{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json',Authorization:\"Bearer \".concat(token)}}).then(function(response){return response.json();}).catch(function(err){return console.log(err);});};","map":{"version":3,"sources":["D:/Dustin/racecity-frontend/src/user/apiUser.js"],"names":["API","read","userId","token","fetch","method","headers","Accept","Authorization","then","response","json","catch","err","console","log","update","user","body","JSON","stringify","updateUser","next","window","localStorage","getItem","auth","parse","setItem","getPurchaseHistory"],"mappings":"AAAA,OAASA,GAAT,KAAoB,WAApB,CAEA,MAAO,IAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,MAAD,CAASC,KAAT,CAAmB,CACrC,MAAOC,CAAAA,KAAK,WAAIJ,GAAJ,kBAAgBE,MAAhB,EAA0B,CACpCG,MAAM,CAAE,KAD4B,CAEpCC,OAAO,CAAE,CACPC,MAAM,CAAE,kBADD,CAEP,eAAgB,kBAFT,CAGPC,aAAa,kBAAYL,KAAZ,CAHN,CAF2B,CAA1B,CAAL,CAQJM,IARI,CAQC,SAACC,QAAD,CAAc,CAClB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACD,CAVI,EAWJC,KAXI,CAWE,SAACC,GAAD,QAASC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT,EAXF,CAAP,CAYD,CAbM,CAeP,MAAO,IAAMG,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACd,MAAD,CAASC,KAAT,CAAgBc,IAAhB,CAAyB,CAC7C,MAAOb,CAAAA,KAAK,WAAIJ,GAAJ,kBAAgBE,MAAhB,EAA0B,CACpCG,MAAM,CAAE,KAD4B,CAEpCC,OAAO,CAAE,CACPC,MAAM,CAAE,kBADD,CAEP,eAAgB,kBAFT,CAGPC,aAAa,kBAAYL,KAAZ,CAHN,CAF2B,CAOpCe,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAP8B,CAA1B,CAAL,CASJR,IATI,CASC,SAACC,QAAD,CAAc,CAClB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACD,CAXI,EAYJC,KAZI,CAYE,SAACC,GAAD,QAASC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT,EAZF,CAAP,CAaD,CAdM,CAgBP,MAAO,IAAMQ,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACJ,IAAD,CAAOK,IAAP,CAAgB,CACxC,GAAI,MAAOC,CAAAA,MAAP,GAAkB,WAAtB,CAAmC,CACjC,GAAIC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAJ,CAAiC,CAC/B,GAAIC,CAAAA,IAAI,CAAGP,IAAI,CAACQ,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAX,CAAX,CACAC,IAAI,CAACT,IAAL,CAAYA,IAAZ,CACAO,YAAY,CAACI,OAAb,CAAqB,KAArB,CAA4BT,IAAI,CAACC,SAAL,CAAeM,IAAf,CAA5B,EACAJ,IAAI,GACL,CACF,CACF,CATM,CAWP,MAAO,IAAMO,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAC3B,MAAD,CAASC,KAAT,CAAmB,CACnD,MAAOC,CAAAA,KAAK,WAAIJ,GAAJ,4BAA0BE,MAA1B,EAAoC,CAC9CG,MAAM,CAAE,KADsC,CAE9CC,OAAO,CAAE,CACPC,MAAM,CAAE,kBADD,CAEP,eAAgB,kBAFT,CAGPC,aAAa,kBAAYL,KAAZ,CAHN,CAFqC,CAApC,CAAL,CAQJM,IARI,CAQC,SAACC,QAAD,CAAc,CAClB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACD,CAVI,EAWJC,KAXI,CAWE,SAACC,GAAD,QAASC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT,EAXF,CAAP,CAYD,CAbM","sourcesContent":["import { API } from '../config';\r\n\r\nexport const read = (userId, token) => {\r\n  return fetch(`${API}/user/${userId}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const update = (userId, token, user) => {\r\n  return fetch(`${API}/user/${userId}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(user),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const updateUser = (user, next) => {\r\n  if (typeof window !== 'undefined') {\r\n    if (localStorage.getItem('jwt')) {\r\n      let auth = JSON.parse(localStorage.getItem('jwt'));\r\n      auth.user = user;\r\n      localStorage.setItem('jwt', JSON.stringify(auth));\r\n      next();\r\n    }\r\n  }\r\n};\r\n\r\nexport const getPurchaseHistory = (userId, token) => {\r\n  return fetch(`${API}/orders/by/user/${userId}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}