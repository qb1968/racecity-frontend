{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dustin\\\\racecity-frontend\\\\src\\\\user\\\\Profile.js\";\nimport React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../auth';\nimport { Link, Redirect } from 'react-router-dom';\nimport { read, update, updateUser } from './apiUser';\n\nconst Profile = ({\n  match\n}) => {\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    password: '',\n    error: false,\n    success: false\n  });\n  const {\n    token\n  } = isAuthenticated();\n  const {\n    name,\n    email,\n    password,\n    error,\n    success\n  } = values;\n\n  const init = userId => {\n    // console.log(userId);\n    read(userId, token).then(data => {\n      if (data.error) {\n        setValues({ ...values,\n          error: true\n        });\n      } else {\n        setValues({ ...values,\n          name: data.name,\n          email: data.email\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    init(match.params.userId);\n  }, []);\n\n  const handleChange = name => e => {\n    setValues({ ...values,\n      error: false,\n      [name]: e.target.value\n    });\n  };\n\n  const clickSubmit = e => {\n    e.preventDefault();\n    update(match.params.userId, token, {\n      name,\n      email,\n      password\n    }).then(data => {\n      if (data.error) {\n        // console.log(data.error);\n        alert(data.error);\n      } else {\n        updateUser(data, () => {\n          setValues({ ...values,\n            name: data.name,\n            email: data.email,\n            success: true\n          });\n        });\n      }\n    });\n  };\n\n  const redirectUser = success => {\n    if (success) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/user/dashboard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 14\n        }\n      });\n    }\n  };\n\n  const profileUpdate = (name, email, password) => /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleChange('name'),\n    className: \"form-control\",\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    onChange: handleChange('email'),\n    className: \"form-control\",\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    onChange: handleChange('password'),\n    className: \"form-control\",\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clickSubmit,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, \"Submit\"));\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    title: \"Profile\",\n    description: \"Update your profile\",\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, \"Profile update\"), profileUpdate(name, email, password), redirectUser(success));\n};\n\nexport default Profile;","map":{"version":3,"sources":["D:/Dustin/racecity-frontend/src/user/Profile.js"],"names":["React","useState","useEffect","Layout","isAuthenticated","Link","Redirect","read","update","updateUser","Profile","match","values","setValues","name","email","password","error","success","token","init","userId","then","data","params","handleChange","e","target","value","clickSubmit","preventDefault","alert","redirectUser","profileUpdate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { read, update, updateUser } from './apiUser';\r\n\r\nconst Profile = ({ match }) => {\r\n  const [values, setValues] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    error: false,\r\n    success: false,\r\n  });\r\n\r\n  const { token } = isAuthenticated();\r\n  const { name, email, password, error, success } = values;\r\n\r\n  const init = (userId) => {\r\n    // console.log(userId);\r\n    read(userId, token).then((data) => {\r\n      if (data.error) {\r\n        setValues({ ...values, error: true });\r\n      } else {\r\n        setValues({ ...values, name: data.name, email: data.email });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    init(match.params.userId);\r\n  }, []);\r\n\r\n  const handleChange = (name) => (e) => {\r\n    setValues({ ...values, error: false, [name]: e.target.value });\r\n  };\r\n\r\n  const clickSubmit = (e) => {\r\n    e.preventDefault();\r\n    update(match.params.userId, token, { name, email, password }).then(\r\n      (data) => {\r\n        if (data.error) {\r\n          // console.log(data.error);\r\n          alert(data.error);\r\n        } else {\r\n          updateUser(data, () => {\r\n            setValues({\r\n              ...values,\r\n              name: data.name,\r\n              email: data.email,\r\n              success: true,\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const redirectUser = (success) => {\r\n    if (success) {\r\n      return <Redirect to='/user/dashboard' />;\r\n    }\r\n  };\r\n\r\n  const profileUpdate = (name, email, password) => (\r\n    <form>\r\n      <div className='form-group'>\r\n        <label className='text-muted'>Name</label>\r\n        <input\r\n          type='text'\r\n          onChange={handleChange('name')}\r\n          className='form-control'\r\n          value={name}\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <label className='text-muted'>Email</label>\r\n        <input\r\n          type='email'\r\n          onChange={handleChange('email')}\r\n          className='form-control'\r\n          value={email}\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <label className='text-muted'>Password</label>\r\n        <input\r\n          type='password'\r\n          onChange={handleChange('password')}\r\n          className='form-control'\r\n          value={password}\r\n        />\r\n      </div>\r\n\r\n      <button onClick={clickSubmit} className='btn btn-primary'>\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Layout\r\n      title='Profile'\r\n      description='Update your profile'\r\n      className='container-fluid'\r\n    >\r\n      <h2 className='mb-4'>Profile update</h2>\r\n      {profileUpdate(name, email, password)}\r\n      {redirectUser(success)}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}