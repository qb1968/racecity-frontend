{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport * as React from \"react\";\nimport { useSpring, animated, config } from \"react-spring\";\nimport { usePrevious } from \"./use-previous\";\nimport { useGestureResponder } from \"react-gesture-responder\";\nimport useScrollLock from \"use-scroll-lock\";\nvar initialTransform = \"translateX(0px) translateY(0px) scale(1)\";\nvar getScale = linearConversion([0, 400], [1, 0.4]);\nvar scaleClamp = clamp(0.4, 1);\n/**\r\n * Image component\r\n * @param param0\r\n */\n\nvar ImageEnlarger = function (_a) {\n  var _b = _a.zoomed,\n      zoomed = _b === void 0 ? false : _b,\n      renderLoading = _a.renderLoading,\n      _c = _a.overlayColor,\n      overlayColor = _c === void 0 ? \"rgba(255,255,255,0.8)\" : _c,\n      enlargedSrc = _a.enlargedSrc,\n      onRequestClose = _a.onRequestClose,\n      _d = _a.style,\n      style = _d === void 0 ? {} : _d,\n      src = _a.src,\n      other = tslib_1.__rest(_a, [\"zoomed\", \"renderLoading\", \"overlayColor\", \"enlargedSrc\", \"onRequestClose\", \"style\", \"src\"]);\n\n  var ref = React.useRef(null);\n  var prevZoom = usePrevious(zoomed);\n\n  var _e = React.useState(false),\n      animating = _e[0],\n      setAnimating = _e[1];\n\n  var cloneRef = React.useRef(null);\n\n  var _f = React.useState(false),\n      cloneLoaded = _f[0],\n      setCloneLoaded = _f[1];\n\n  var prevCloneLoaded = usePrevious(cloneLoaded);\n\n  var _g = React.useState(zoomed),\n      hasRequestedZoom = _g[0],\n      setHasRequestedZoom = _g[1]; // this allows us to lazily load our cloned image\n\n\n  React.useEffect(function () {\n    if (!hasRequestedZoom && zoomed) {\n      setHasRequestedZoom(true);\n    }\n  }, [hasRequestedZoom, zoomed]); // disable scrolling while zooming is taking place\n\n  useScrollLock(zoomed || animating);\n  /**\r\n   * We basically only use this to imperatively set the\r\n   * visibility of the thumbnail\r\n   */\n\n  var _h = useSpring(function () {\n    return {\n      opacity: 1,\n      immediate: true\n    };\n  }),\n      thumbProps = _h[0],\n      setThumbProps = _h[1]; // set overlay opacity\n\n\n  var _j = useSpring(function () {\n    return {\n      opacity: zoomed ? 1 : 0\n    };\n  }),\n      overlay = _j[0],\n      setOverlay = _j[1]; // our cloned image spring\n\n\n  var _k = useSpring(function () {\n    return {\n      opacity: 0,\n      transform: initialTransform,\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0,\n      immediate: true,\n      config: config.stiff\n    };\n  }),\n      props = _k[0],\n      set = _k[1];\n  /**\r\n   * Handle drag movement\r\n   */\n\n\n  function onMove(_a) {\n    var delta = _a.delta;\n    var scale = scaleClamp(getScale(Math.abs(delta[1]))); // we use this to alter the y-position to ensure the image\n    // scales under our cursor / pointer\n\n    var diffHeight = (1 - scale) * cloneRef.current.height / 2;\n    var ty = delta[1] - diffHeight * (delta[1] > 0 ? 1 : -1);\n    set({\n      transform: \"translateX(\" + delta[0] * 0.8 + \"px) translateY(\" + ty + \"px) scale(\" + scale + \")\",\n      immediate: true\n    });\n    setOverlay({\n      opacity: scale,\n      immediate: true\n    });\n  }\n  /**\r\n   * Handle release - we almost always close\r\n   * @param param0\r\n   */\n\n\n  function onEnd(_a) {\n    var delta = _a.delta;\n\n    if (Math.abs(delta[1]) > 20 && onRequestClose) {\n      onRequestClose();\n    } else {\n      // reset\n      set({\n        transform: initialTransform,\n        immediate: false\n      });\n      setOverlay({\n        opacity: 1,\n        immediate: false\n      });\n    }\n  } // our gesture binding helper\n\n\n  var bind = useGestureResponder({\n    onStartShouldSet: function () {\n      return false;\n    },\n    onMoveShouldSet: function () {\n      if (!zoomed) {\n        return false;\n      }\n\n      return true;\n    },\n    onMove: onMove,\n    onRelease: onEnd,\n    onTerminate: onEnd\n  }).bind;\n  /**\r\n   * Basic logic for determining positions. A bit of a mess tbh,\r\n   * but that often comes when mixing imperative logic w/\r\n   * react's declarative nature.\r\n   */\n\n  var generatePositions = React.useCallback(function (immediate) {\n    if (immediate === void 0) {\n      immediate = false;\n    } // any time this prop changes, we update our position\n\n\n    if (ref.current && cloneLoaded) {\n      var rect = ref.current.getBoundingClientRect();\n      var cloneSize = {\n        width: cloneRef.current.naturalWidth,\n        height: cloneRef.current.naturalHeight\n      };\n      var thumbDimensions = {\n        x: rect.left,\n        y: rect.top,\n        w: rect.width,\n        h: rect.height\n      };\n      var clonedDimensions = getTargetDimensions(cloneSize.width, cloneSize.height);\n      var initialSize = getInitialClonedDimensions(thumbDimensions, clonedDimensions);\n      var zoomingIn = !prevZoom && zoomed || !prevCloneLoaded && cloneLoaded;\n      var zoomingOut = prevZoom && !zoomed; // handle zooming in\n\n      if (zoomingIn && !immediate) {\n        setThumbProps({\n          opacity: 0,\n          immediate: true\n        });\n        set({\n          opacity: 1,\n          immediate: true,\n          transform: \"translateX(\" + initialSize.translateX + \"px) translateY(\" + initialSize.translateY + \"px) scale(\" + initialSize.scale + \")\",\n          left: clonedDimensions.x,\n          top: clonedDimensions.y,\n          width: clonedDimensions.w,\n          height: clonedDimensions.h,\n          onRest: function () {}\n        });\n        set({\n          transform: initialTransform,\n          immediate: false\n        }); // handle zooming out\n      } else if (zoomingOut) {\n        setAnimating(true);\n        set({\n          transform: \"translateX(\" + initialSize.translateX + \"px) translateY(\" + initialSize.translateY + \"px) scale(\" + initialSize.scale + \")\",\n          immediate: false,\n          onRest: function () {\n            setThumbProps({\n              opacity: 1,\n              immediate: true\n            });\n            set({\n              opacity: 0,\n              immediate: true\n            });\n            setAnimating(false);\n          }\n        }); // handle resizing\n      } else if (immediate) {\n        set({\n          immediate: true,\n          transform: initialTransform,\n          left: clonedDimensions.x,\n          top: clonedDimensions.y,\n          width: clonedDimensions.w,\n          height: clonedDimensions.h,\n          onRest: function () {}\n        });\n      }\n\n      setOverlay({\n        opacity: zoomed ? 1 : 0\n      });\n    }\n  }, [zoomed, cloneLoaded, ref, cloneRef, prevCloneLoaded, hasRequestedZoom, prevZoom]); // we need to update our fixed positioning when resizing\n  // this should probably be debounced\n\n  var onResize = React.useCallback(function () {\n    generatePositions(true);\n  }, [zoomed, cloneLoaded, ref, prevCloneLoaded, prevZoom]); // update our various positions\n\n  React.useEffect(function () {\n    generatePositions();\n    if (zoomed) window.addEventListener(\"resize\", onResize);\n    return function () {\n      window.removeEventListener(\"resize\", onResize);\n    };\n  }, [zoomed, cloneLoaded, ref, prevCloneLoaded, prevZoom]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"EnlargedImage\"\n  }, React.createElement(\"div\", {\n    className: \"EnlargedImage__container\",\n    style: {\n      position: \"relative\",\n      display: \"inline-block\"\n    }\n  }, React.createElement(animated.img, tslib_1.__assign({\n    className: \"EnlargedImage__Image\",\n    src: src,\n    style: tslib_1.__assign({\n      cursor: \"zoom-in\",\n      maxWidth: \"100%\",\n      height: \"auto\",\n      opacity: thumbProps.opacity\n    }, style),\n    ref: ref\n  }, other)), !cloneLoaded && zoomed && renderLoading)), hasRequestedZoom && React.createElement(\"div\", tslib_1.__assign({\n    className: \"EnlargedImage__enlarged-container\"\n  }, bind, {\n    \"aria-hidden\": !zoomed,\n    onClick: onRequestClose,\n    style: {\n      pointerEvents: zoomed ? \"auto\" : \"none\",\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      zIndex: 90,\n      cursor: \"zoom-out\"\n    }\n  }), React.createElement(animated.div, {\n    className: \"EnlargedImage__overlay\",\n    style: {\n      opacity: overlay.opacity,\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: overlayColor\n    }\n  }), React.createElement(animated.img, {\n    className: \"EnlargedImage__clone\",\n    onLoad: function () {\n      setCloneLoaded(true);\n    },\n    style: {\n      pointerEvents: \"none\",\n      zIndex: 100,\n      position: \"absolute\",\n      opacity: props.opacity,\n      transform: props.transform,\n      left: props.left,\n      top: props.top,\n      width: props.width,\n      height: props.height\n    },\n    ref: cloneRef,\n    src: enlargedSrc || src\n  })));\n};\n/**\r\n * Get the original dimensions of the clone so that it appears\r\n * in the same place as the original image\r\n * @param o origin\r\n * @param t target\r\n */\n\n\nfunction getInitialClonedDimensions(o, t) {\n  var scale = o.w / t.w;\n  var translateX = o.x + o.w / 2 - (t.x + t.w / 2);\n  var translateY = o.y + o.h / 2 - (t.y + t.h / 2);\n  return {\n    scale: scale,\n    translateX: translateX,\n    translateY: translateY\n  };\n}\n/**\r\n * Get the target dimensions / position of the image when\r\n * it's zoomed in\r\n *\r\n * @param iw (image width)\r\n * @param ih (image height)\r\n * @param padding\r\n */\n\n\nfunction getTargetDimensions(iw, ih, padding) {\n  if (padding === void 0) {\n    padding = 0;\n  }\n\n  var vp = getViewport();\n  var target = scaleToBounds(iw, ih, vp.width - padding, vp.height - padding);\n  var left = vp.width / 2 - target.width / 2;\n  var top = vp.height / 2 - target.height / 2;\n  return {\n    x: left,\n    y: top,\n    w: target.width,\n    h: target.height\n  };\n}\n/**\r\n * Scale numbers to bounds given max dimensions while\r\n * maintaining the original aspect ratio\r\n *\r\n * @param ow\r\n * @param oh\r\n * @param mw\r\n * @param mh\r\n */\n\n\nfunction scaleToBounds(ow, oh, mw, mh) {\n  var scale = Math.min(mw / ow, mh / oh);\n  if (scale > 1) scale = 1;\n  return {\n    width: ow * scale,\n    height: oh * scale\n  };\n}\n/**\r\n * Server-safe measurement of the viewport size\r\n */\n\n\nfunction getViewport() {\n  if (typeof window !== \"undefined\") {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n  }\n\n  return {\n    width: 0,\n    height: 0\n  };\n}\n/**\r\n * Create a basic linear conversion fn\r\n */\n\n\nfunction linearConversion(a, b) {\n  var o = a[1] - a[0];\n  var n = b[1] - b[0];\n  return function (x) {\n    return (x - a[0]) * n / o + b[0];\n  };\n}\n/**\r\n * Create a clamp\r\n * @param max\r\n * @param min\r\n */\n\n\nfunction clamp(min, max) {\n  return function (x) {\n    if (x > max) return max;\n    if (x < min) return min;\n    return x;\n  };\n}\n\nexport default ImageEnlarger;","map":{"version":3,"sources":["D:/Dustin/racecity-frontend/node_modules/react-image-enlarger/esm/index.js"],"names":["tslib_1","React","useSpring","animated","config","usePrevious","useGestureResponder","useScrollLock","initialTransform","getScale","linearConversion","scaleClamp","clamp","ImageEnlarger","_a","_b","zoomed","renderLoading","_c","overlayColor","enlargedSrc","onRequestClose","_d","style","src","other","__rest","ref","useRef","prevZoom","_e","useState","animating","setAnimating","cloneRef","_f","cloneLoaded","setCloneLoaded","prevCloneLoaded","_g","hasRequestedZoom","setHasRequestedZoom","useEffect","_h","opacity","immediate","thumbProps","setThumbProps","_j","overlay","setOverlay","_k","transform","left","top","width","height","stiff","props","set","onMove","delta","scale","Math","abs","diffHeight","current","ty","onEnd","bind","onStartShouldSet","onMoveShouldSet","onRelease","onTerminate","generatePositions","useCallback","rect","getBoundingClientRect","cloneSize","naturalWidth","naturalHeight","thumbDimensions","x","y","w","h","clonedDimensions","getTargetDimensions","initialSize","getInitialClonedDimensions","zoomingIn","zoomingOut","translateX","translateY","onRest","onResize","window","addEventListener","removeEventListener","createElement","Fragment","className","position","display","img","__assign","cursor","maxWidth","onClick","pointerEvents","bottom","right","zIndex","div","backgroundColor","onLoad","o","t","iw","ih","padding","vp","getViewport","target","scaleToBounds","ow","oh","mw","mh","min","innerWidth","innerHeight","a","b","n","max"],"mappings":"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","sourcesContent":["import * as tslib_1 from \"tslib\";\r\nimport * as React from \"react\";\r\nimport { useSpring, animated, config } from \"react-spring\";\r\nimport { usePrevious } from \"./use-previous\";\r\nimport { useGestureResponder } from \"react-gesture-responder\";\r\nimport useScrollLock from \"use-scroll-lock\";\r\nvar initialTransform = \"translateX(0px) translateY(0px) scale(1)\";\r\nvar getScale = linearConversion([0, 400], [1, 0.4]);\r\nvar scaleClamp = clamp(0.4, 1);\r\n/**\r\n * Image component\r\n * @param param0\r\n */\r\nvar ImageEnlarger = function (_a) {\r\n    var _b = _a.zoomed, zoomed = _b === void 0 ? false : _b, renderLoading = _a.renderLoading, _c = _a.overlayColor, overlayColor = _c === void 0 ? \"rgba(255,255,255,0.8)\" : _c, enlargedSrc = _a.enlargedSrc, onRequestClose = _a.onRequestClose, _d = _a.style, style = _d === void 0 ? {} : _d, src = _a.src, other = tslib_1.__rest(_a, [\"zoomed\", \"renderLoading\", \"overlayColor\", \"enlargedSrc\", \"onRequestClose\", \"style\", \"src\"]);\r\n    var ref = React.useRef(null);\r\n    var prevZoom = usePrevious(zoomed);\r\n    var _e = React.useState(false), animating = _e[0], setAnimating = _e[1];\r\n    var cloneRef = React.useRef(null);\r\n    var _f = React.useState(false), cloneLoaded = _f[0], setCloneLoaded = _f[1];\r\n    var prevCloneLoaded = usePrevious(cloneLoaded);\r\n    var _g = React.useState(zoomed), hasRequestedZoom = _g[0], setHasRequestedZoom = _g[1];\r\n    // this allows us to lazily load our cloned image\r\n    React.useEffect(function () {\r\n        if (!hasRequestedZoom && zoomed) {\r\n            setHasRequestedZoom(true);\r\n        }\r\n    }, [hasRequestedZoom, zoomed]);\r\n    // disable scrolling while zooming is taking place\r\n    useScrollLock(zoomed || animating);\r\n    /**\r\n     * We basically only use this to imperatively set the\r\n     * visibility of the thumbnail\r\n     */\r\n    var _h = useSpring(function () { return ({\r\n        opacity: 1,\r\n        immediate: true\r\n    }); }), thumbProps = _h[0], setThumbProps = _h[1];\r\n    // set overlay opacity\r\n    var _j = useSpring(function () { return ({\r\n        opacity: zoomed ? 1 : 0\r\n    }); }), overlay = _j[0], setOverlay = _j[1];\r\n    // our cloned image spring\r\n    var _k = useSpring(function () { return ({\r\n        opacity: 0,\r\n        transform: initialTransform,\r\n        left: 0,\r\n        top: 0,\r\n        width: 0,\r\n        height: 0,\r\n        immediate: true,\r\n        config: config.stiff\r\n    }); }), props = _k[0], set = _k[1];\r\n    /**\r\n     * Handle drag movement\r\n     */\r\n    function onMove(_a) {\r\n        var delta = _a.delta;\r\n        var scale = scaleClamp(getScale(Math.abs(delta[1])));\r\n        // we use this to alter the y-position to ensure the image\r\n        // scales under our cursor / pointer\r\n        var diffHeight = ((1 - scale) * cloneRef.current.height) / 2;\r\n        var ty = delta[1] - diffHeight * (delta[1] > 0 ? 1 : -1);\r\n        set({\r\n            transform: \"translateX(\" + delta[0] *\r\n                0.8 + \"px) translateY(\" + ty + \"px) scale(\" + scale + \")\",\r\n            immediate: true\r\n        });\r\n        setOverlay({ opacity: scale, immediate: true });\r\n    }\r\n    /**\r\n     * Handle release - we almost always close\r\n     * @param param0\r\n     */\r\n    function onEnd(_a) {\r\n        var delta = _a.delta;\r\n        if (Math.abs(delta[1]) > 20 && onRequestClose) {\r\n            onRequestClose();\r\n        }\r\n        else {\r\n            // reset\r\n            set({ transform: initialTransform, immediate: false });\r\n            setOverlay({ opacity: 1, immediate: false });\r\n        }\r\n    }\r\n    // our gesture binding helper\r\n    var bind = useGestureResponder({\r\n        onStartShouldSet: function () { return false; },\r\n        onMoveShouldSet: function () {\r\n            if (!zoomed) {\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        onMove: onMove,\r\n        onRelease: onEnd,\r\n        onTerminate: onEnd\r\n    }).bind;\r\n    /**\r\n     * Basic logic for determining positions. A bit of a mess tbh,\r\n     * but that often comes when mixing imperative logic w/\r\n     * react's declarative nature.\r\n     */\r\n    var generatePositions = React.useCallback(function (immediate) {\r\n        if (immediate === void 0) { immediate = false; }\r\n        // any time this prop changes, we update our position\r\n        if (ref.current && cloneLoaded) {\r\n            var rect = ref.current.getBoundingClientRect();\r\n            var cloneSize = {\r\n                width: cloneRef.current.naturalWidth,\r\n                height: cloneRef.current.naturalHeight\r\n            };\r\n            var thumbDimensions = {\r\n                x: rect.left,\r\n                y: rect.top,\r\n                w: rect.width,\r\n                h: rect.height\r\n            };\r\n            var clonedDimensions = getTargetDimensions(cloneSize.width, cloneSize.height);\r\n            var initialSize = getInitialClonedDimensions(thumbDimensions, clonedDimensions);\r\n            var zoomingIn = (!prevZoom && zoomed) || (!prevCloneLoaded && cloneLoaded);\r\n            var zoomingOut = prevZoom && !zoomed;\r\n            // handle zooming in\r\n            if (zoomingIn && !immediate) {\r\n                setThumbProps({ opacity: 0, immediate: true });\r\n                set({\r\n                    opacity: 1,\r\n                    immediate: true,\r\n                    transform: \"translateX(\" + initialSize.translateX + \"px) translateY(\" + initialSize.translateY + \"px) scale(\" + initialSize.scale + \")\",\r\n                    left: clonedDimensions.x,\r\n                    top: clonedDimensions.y,\r\n                    width: clonedDimensions.w,\r\n                    height: clonedDimensions.h,\r\n                    onRest: function () { }\r\n                });\r\n                set({\r\n                    transform: initialTransform,\r\n                    immediate: false\r\n                });\r\n                // handle zooming out\r\n            }\r\n            else if (zoomingOut) {\r\n                setAnimating(true);\r\n                set({\r\n                    transform: \"translateX(\" + initialSize.translateX + \"px) translateY(\" + initialSize.translateY + \"px) scale(\" + initialSize.scale + \")\",\r\n                    immediate: false,\r\n                    onRest: function () {\r\n                        setThumbProps({ opacity: 1, immediate: true });\r\n                        set({ opacity: 0, immediate: true });\r\n                        setAnimating(false);\r\n                    }\r\n                });\r\n                // handle resizing\r\n            }\r\n            else if (immediate) {\r\n                set({\r\n                    immediate: true,\r\n                    transform: initialTransform,\r\n                    left: clonedDimensions.x,\r\n                    top: clonedDimensions.y,\r\n                    width: clonedDimensions.w,\r\n                    height: clonedDimensions.h,\r\n                    onRest: function () { }\r\n                });\r\n            }\r\n            setOverlay({ opacity: zoomed ? 1 : 0 });\r\n        }\r\n    }, [\r\n        zoomed,\r\n        cloneLoaded,\r\n        ref,\r\n        cloneRef,\r\n        prevCloneLoaded,\r\n        hasRequestedZoom,\r\n        prevZoom\r\n    ]);\r\n    // we need to update our fixed positioning when resizing\r\n    // this should probably be debounced\r\n    var onResize = React.useCallback(function () {\r\n        generatePositions(true);\r\n    }, [zoomed, cloneLoaded, ref, prevCloneLoaded, prevZoom]);\r\n    // update our various positions\r\n    React.useEffect(function () {\r\n        generatePositions();\r\n        if (zoomed)\r\n            window.addEventListener(\"resize\", onResize);\r\n        return function () {\r\n            window.removeEventListener(\"resize\", onResize);\r\n        };\r\n    }, [zoomed, cloneLoaded, ref, prevCloneLoaded, prevZoom]);\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"div\", { className: \"EnlargedImage\" },\r\n            React.createElement(\"div\", { className: \"EnlargedImage__container\", style: { position: \"relative\", display: \"inline-block\" } },\r\n                React.createElement(animated.img, tslib_1.__assign({ className: \"EnlargedImage__Image\", src: src, style: tslib_1.__assign({ cursor: \"zoom-in\", maxWidth: \"100%\", height: \"auto\", opacity: thumbProps.opacity }, style), ref: ref }, other)),\r\n                !cloneLoaded && zoomed && renderLoading)),\r\n        hasRequestedZoom && (React.createElement(\"div\", tslib_1.__assign({ className: \"EnlargedImage__enlarged-container\" }, bind, { \"aria-hidden\": !zoomed, onClick: onRequestClose, style: {\r\n                pointerEvents: zoomed ? \"auto\" : \"none\",\r\n                position: \"fixed\",\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0,\r\n                zIndex: 90,\r\n                cursor: \"zoom-out\"\r\n            } }),\r\n            React.createElement(animated.div, { className: \"EnlargedImage__overlay\", style: {\r\n                    opacity: overlay.opacity,\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    right: 0,\r\n                    bottom: 0,\r\n                    backgroundColor: overlayColor\r\n                } }),\r\n            React.createElement(animated.img, { className: \"EnlargedImage__clone\", onLoad: function () {\r\n                    setCloneLoaded(true);\r\n                }, style: {\r\n                    pointerEvents: \"none\",\r\n                    zIndex: 100,\r\n                    position: \"absolute\",\r\n                    opacity: props.opacity,\r\n                    transform: props.transform,\r\n                    left: props.left,\r\n                    top: props.top,\r\n                    width: props.width,\r\n                    height: props.height\r\n                }, ref: cloneRef, src: enlargedSrc || src })))));\r\n};\r\n/**\r\n * Get the original dimensions of the clone so that it appears\r\n * in the same place as the original image\r\n * @param o origin\r\n * @param t target\r\n */\r\nfunction getInitialClonedDimensions(o, t) {\r\n    var scale = o.w / t.w;\r\n    var translateX = o.x + o.w / 2 - (t.x + t.w / 2);\r\n    var translateY = o.y + o.h / 2 - (t.y + t.h / 2);\r\n    return {\r\n        scale: scale,\r\n        translateX: translateX,\r\n        translateY: translateY\r\n    };\r\n}\r\n/**\r\n * Get the target dimensions / position of the image when\r\n * it's zoomed in\r\n *\r\n * @param iw (image width)\r\n * @param ih (image height)\r\n * @param padding\r\n */\r\nfunction getTargetDimensions(iw, ih, padding) {\r\n    if (padding === void 0) { padding = 0; }\r\n    var vp = getViewport();\r\n    var target = scaleToBounds(iw, ih, vp.width - padding, vp.height - padding);\r\n    var left = vp.width / 2 - target.width / 2;\r\n    var top = vp.height / 2 - target.height / 2;\r\n    return {\r\n        x: left,\r\n        y: top,\r\n        w: target.width,\r\n        h: target.height\r\n    };\r\n}\r\n/**\r\n * Scale numbers to bounds given max dimensions while\r\n * maintaining the original aspect ratio\r\n *\r\n * @param ow\r\n * @param oh\r\n * @param mw\r\n * @param mh\r\n */\r\nfunction scaleToBounds(ow, oh, mw, mh) {\r\n    var scale = Math.min(mw / ow, mh / oh);\r\n    if (scale > 1)\r\n        scale = 1;\r\n    return {\r\n        width: ow * scale,\r\n        height: oh * scale\r\n    };\r\n}\r\n/**\r\n * Server-safe measurement of the viewport size\r\n */\r\nfunction getViewport() {\r\n    if (typeof window !== \"undefined\") {\r\n        return { width: window.innerWidth, height: window.innerHeight };\r\n    }\r\n    return { width: 0, height: 0 };\r\n}\r\n/**\r\n * Create a basic linear conversion fn\r\n */\r\nfunction linearConversion(a, b) {\r\n    var o = a[1] - a[0];\r\n    var n = b[1] - b[0];\r\n    return function (x) {\r\n        return ((x - a[0]) * n) / o + b[0];\r\n    };\r\n}\r\n/**\r\n * Create a clamp\r\n * @param max\r\n * @param min\r\n */\r\nfunction clamp(min, max) {\r\n    return function (x) {\r\n        if (x > max)\r\n            return max;\r\n        if (x < min)\r\n            return min;\r\n        return x;\r\n    };\r\n}\r\nexport default ImageEnlarger;\r\n"]},"metadata":{},"sourceType":"module"}