{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dustin\\\\racecity-frontend\\\\src\\\\core\\\\Checkbox.js\";\nimport React, { useState } from 'react';\nimport CheckboxM from '@material-ui/core/Checkbox';\n\nconst Checkbox = ({\n  categories,\n  handleFilters\n}) => {\n  const [checked, setCheked] = useState([]);\n\n  const handleToggle = c => () => {\n    // return the first index or -1\n    const currentCategoryId = checked.indexOf(c);\n    const newCheckedCategoryId = [...checked]; // if currently checked was not already in checked state > push\n    // else pull/take off\n\n    if (currentCategoryId === -1) {\n      newCheckedCategoryId.push(c);\n    } else {\n      newCheckedCategoryId.splice(currentCategoryId, 1);\n    } // console.log(newCheckedCategoryId);\n\n\n    setCheked(newCheckedCategoryId);\n    handleFilters(newCheckedCategoryId);\n  };\n\n  return categories.map(comics => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-unstyled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CheckboxM, {\n    onChange: handleToggle(comics._id),\n    value: checked.indexOf(comics._id === -1),\n    checked: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default Checkbox;","map":{"version":3,"sources":["D:/Dustin/racecity-frontend/src/core/Checkbox.js"],"names":["React","useState","CheckboxM","Checkbox","categories","handleFilters","checked","setCheked","handleToggle","c","currentCategoryId","indexOf","newCheckedCategoryId","push","splice","map","comics","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAAmC;AAClD,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBN,QAAQ,CAAC,EAAD,CAArC;;AAEA,QAAMO,YAAY,GAAIC,CAAD,IAAO,MAAM;AAChC;AACA,UAAMC,iBAAiB,GAAGJ,OAAO,CAACK,OAAR,CAAgBF,CAAhB,CAA1B;AACA,UAAMG,oBAAoB,GAAG,CAAC,GAAGN,OAAJ,CAA7B,CAHgC,CAIhC;AACA;;AACA,QAAII,iBAAiB,KAAK,CAAC,CAA3B,EAA8B;AAC5BE,MAAAA,oBAAoB,CAACC,IAArB,CAA0BJ,CAA1B;AACD,KAFD,MAEO;AACLG,MAAAA,oBAAoB,CAACE,MAArB,CAA4BJ,iBAA5B,EAA+C,CAA/C;AACD,KAV+B,CAWhC;;;AACAH,IAAAA,SAAS,CAACK,oBAAD,CAAT;AACAP,IAAAA,aAAa,CAACO,oBAAD,CAAb;AACD,GAdD;;AAgBA,SAAOR,UAAU,CAACW,GAAX,CAAgBC,MAAD,iBACpB;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,QAAQ,EAAER,YAAY,CAACQ,MAAM,CAACC,GAAR,CADxB;AAEE,IAAA,KAAK,EAAEX,OAAO,CAACK,OAAR,CAAgBK,MAAM,CAACC,GAAP,KAAe,CAAC,CAAhC,CAFT;AAGE,IAAA,OAAO,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADK,CAAP;AAWD,CA9BD;;AAgCA,eAAed,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport CheckboxM from '@material-ui/core/Checkbox';\r\n\r\nconst Checkbox = ({ categories, handleFilters }) => {\r\n  const [checked, setCheked] = useState([]);\r\n\r\n  const handleToggle = (c) => () => {\r\n    // return the first index or -1\r\n    const currentCategoryId = checked.indexOf(c);\r\n    const newCheckedCategoryId = [...checked];\r\n    // if currently checked was not already in checked state > push\r\n    // else pull/take off\r\n    if (currentCategoryId === -1) {\r\n      newCheckedCategoryId.push(c);\r\n    } else {\r\n      newCheckedCategoryId.splice(currentCategoryId, 1);\r\n    }\r\n    // console.log(newCheckedCategoryId);\r\n    setCheked(newCheckedCategoryId);\r\n    handleFilters(newCheckedCategoryId);\r\n  };\r\n\r\n  return categories.map((comics) => (\r\n    <li className='list-unstyled'>\r\n      <CheckboxM\r\n        onChange={handleToggle(comics._id)}\r\n        value={checked.indexOf(comics._id === -1)}\r\n        checked\r\n      />\r\n      \r\n      \r\n    </li>\r\n  ));\r\n};\r\n\r\nexport default Checkbox;\r\n"]},"metadata":{},"sourceType":"module"}