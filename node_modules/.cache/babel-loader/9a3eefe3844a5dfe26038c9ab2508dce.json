{"ast":null,"code":"import{API}from'../config';import queryString from'query-string';export var getProducts=function getProducts(sortBy){return fetch(\"\".concat(API,\"/products?sortBy=\").concat(sortBy,\"&order=desc&limit=3\"),{method:'GET'}).then(function(response){return response.json();}).catch(function(err){return console.log(err);});};export var getCategories=function getCategories(){return fetch(\"\".concat(API,\"/categories\"),{method:'GET'}).then(function(response){return response.json();}).catch(function(err){return console.log(err);});};export var getFilteredProducts=function getFilteredProducts(skip,limit){var filters=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var data={limit:limit,skip:skip,filters:filters};return fetch(\"\".concat(API,\"/products/by/search\"),{method:'POST',headers:{Accept:'application/json','Content-Type':'application/json'},body:JSON.stringify(data)}).then(function(response){return response.json();}).catch(function(err){console.log(err);});};export var list=function list(params){var query=queryString.stringify(params);console.log('query',query);return fetch(\"\".concat(API,\"/products/search?\").concat(query),{method:'GET'}).then(function(response){return response.json();}).catch(function(err){return console.log(err);});};export var read=function read(productId){return fetch(\"\".concat(API,\"/product/\").concat(productId),{method:'GET'}).then(function(response){return response.json();}).catch(function(err){return console.log(err);});};export var listRelated=function listRelated(productId){return fetch(\"\".concat(API,\"/products/related/\").concat(productId),{method:'GET'}).then(function(response){return response.json();}).catch(function(err){return console.log(err);});};export var getBraintreeClientToken=function getBraintreeClientToken(userId,token){return fetch(\"\".concat(API,\"/braintree/getToken/\").concat(userId),{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json',Authorization:\"Bearer \".concat(token)}}).then(function(response){return response.json();}).catch(function(err){return console.log(err);});};export var processPayment=function processPayment(userId,token,paymentData){return fetch(\"\".concat(API,\"/braintree/payment/\").concat(userId),{method:'POST',headers:{Accept:'application/json','Content-Type':'application/json',Authorization:\"Bearer \".concat(token)},body:JSON.stringify(paymentData)}).then(function(response){return response.json();}).catch(function(err){return console.log(err);});};export var createOrder=function createOrder(userId,token,createOrderData){return fetch(\"\".concat(API,\"/order/create/\").concat(userId),{method:'POST',headers:{Accept:'application/json','Content-Type':'application/json',Authorization:\"Bearer \".concat(token)},body:JSON.stringify({order:createOrderData})}).then(function(response){return response.json();}).catch(function(err){return console.log(err);});};","map":{"version":3,"sources":["D:/Dustin/racecity-frontend/src/core/apiCore.js"],"names":["API","queryString","getProducts","sortBy","fetch","method","then","response","json","catch","err","console","log","getCategories","getFilteredProducts","skip","limit","filters","data","headers","Accept","body","JSON","stringify","list","params","query","read","productId","listRelated","getBraintreeClientToken","userId","token","Authorization","processPayment","paymentData","createOrder","createOrderData","order"],"mappings":"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","sourcesContent":["import { API } from '../config';\r\nimport queryString from 'query-string';\r\n\r\nexport const getProducts = (sortBy) => {\r\n  return fetch(`${API}/products?sortBy=${sortBy}&order=desc&limit=3`, {\r\n    method: 'GET',\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getCategories = () => {\r\n  return fetch(`${API}/categories`, {\r\n    method: 'GET',\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getFilteredProducts = (skip, limit, filters = {}) => {\r\n  const data = {\r\n    limit,\r\n    skip,\r\n    filters,\r\n  };\r\n  return fetch(`${API}/products/by/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(data),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const list = (params) => {\r\n  const query = queryString.stringify(params);\r\n  console.log('query', query);\r\n  return fetch(`${API}/products/search?${query}`, {\r\n    method: 'GET',\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const read = (productId) => {\r\n  return fetch(`${API}/product/${productId}`, {\r\n    method: 'GET',\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const listRelated = (productId) => {\r\n  return fetch(`${API}/products/related/${productId}`, {\r\n    method: 'GET',\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getBraintreeClientToken = (userId, token) => {\r\n  return fetch(`${API}/braintree/getToken/${userId}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const processPayment = (userId, token, paymentData) => {\r\n  return fetch(`${API}/braintree/payment/${userId}`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(paymentData),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const createOrder = (userId, token, createOrderData) => {\r\n  return fetch(`${API}/order/create/${userId}`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({ order: createOrderData }),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}