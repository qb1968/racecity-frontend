{"ast":null,"code":"import _slicedToArray from\"D:\\\\Dustin\\\\racecity-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Layout from'../core/Layout';import{isAuthenticated}from'../auth';import{Link}from'react-router-dom';import{createCategory}from'./apiAdmin';var AddCategory=function AddCategory(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),success=_useState6[0],setSuccess=_useState6[1];// destructure user and token from localstorage\nvar _isAuthenticated=isAuthenticated(),user=_isAuthenticated.user,token=_isAuthenticated.token;var handleChange=function handleChange(e){setError('');setName(e.target.value);};var clickSubmit=function clickSubmit(e){e.preventDefault();setError('');setSuccess(false);// make request to api to create category\ncreateCategory(user._id,token,{name:name}).then(function(data){if(data.error){setError(data.error);}else{setError('');setSuccess(true);}});};var newCategoryForm=function newCategoryForm(){return/*#__PURE__*/React.createElement(\"form\",{onSubmit:clickSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{className:\"text-muted\"},\"Name\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",onChange:handleChange,value:name,autoFocus:true,required:true})),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-outline-primary\"},\"Create Category\"));};var showSuccess=function showSuccess(){if(success){return/*#__PURE__*/React.createElement(\"h3\",{className:\"text-success\"},name,\" is created\");}};var showError=function showError(){if(error){return/*#__PURE__*/React.createElement(\"h3\",{className:\"text-danger\"},\"Category should be unique\");}};var goBack=function goBack(){return/*#__PURE__*/React.createElement(\"div\",{className:\"mt-5\"},/*#__PURE__*/React.createElement(Link,{to:\"/admin/dashboard\",className:\"text-warning\"},\"Back to Dashboard\"));};return/*#__PURE__*/React.createElement(Layout,{title:\"Add a new category\",description:\"Hey \".concat(user.name,\", ready to add a new category?\")},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-8 offset-md-2\"},showSuccess(),showError(),newCategoryForm(),goBack())));};export default AddCategory;","map":{"version":3,"sources":["D:/Dustin/racecity-frontend/src/admin/AddCategory.js"],"names":["React","useState","Layout","isAuthenticated","Link","createCategory","AddCategory","name","setName","error","setError","success","setSuccess","user","token","handleChange","e","target","value","clickSubmit","preventDefault","_id","then","data","newCategoryForm","showSuccess","showError","goBack"],"mappings":"yJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,MAAP,KAAmB,gBAAnB,CACA,OAASC,eAAT,KAAgC,SAAhC,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,cAAT,KAA+B,YAA/B,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,cAAwBL,QAAQ,CAAC,EAAD,CAAhC,wCAAOM,IAAP,eAAaC,OAAb,eACA,eAA0BP,QAAQ,CAAC,KAAD,CAAlC,yCAAOQ,KAAP,eAAcC,QAAd,eACA,eAA8BT,QAAQ,CAAC,KAAD,CAAtC,yCAAOU,OAAP,eAAgBC,UAAhB,eAEA;AACA,qBAAwBT,eAAe,EAAvC,CAAQU,IAAR,kBAAQA,IAAR,CAAcC,KAAd,kBAAcA,KAAd,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAC1BN,QAAQ,CAAC,EAAD,CAAR,CACAF,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP,CACD,CAHD,CAKA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACH,CAAD,CAAO,CACzBA,CAAC,CAACI,cAAF,GACAV,QAAQ,CAAC,EAAD,CAAR,CACAE,UAAU,CAAC,KAAD,CAAV,CACA;AACAP,cAAc,CAACQ,IAAI,CAACQ,GAAN,CAAWP,KAAX,CAAkB,CAAEP,IAAI,CAAJA,IAAF,CAAlB,CAAd,CAA0Ce,IAA1C,CAA+C,SAACC,IAAD,CAAU,CACvD,GAAIA,IAAI,CAACd,KAAT,CAAgB,CACdC,QAAQ,CAACa,IAAI,CAACd,KAAN,CAAR,CACD,CAFD,IAEO,CACLC,QAAQ,CAAC,EAAD,CAAR,CACAE,UAAU,CAAC,IAAD,CAAV,CACD,CACF,CAPD,EAQD,CAbD,CAeA,GAAMY,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,sBACtB,4BAAM,QAAQ,CAAEL,WAAhB,eACE,2BAAK,SAAS,CAAC,YAAf,eACE,6BAAO,SAAS,CAAC,YAAjB,SADF,cAEE,6BACE,IAAI,CAAC,MADP,CAEE,SAAS,CAAC,cAFZ,CAGE,QAAQ,CAAEJ,YAHZ,CAIE,KAAK,CAAER,IAJT,CAKE,SAAS,KALX,CAME,QAAQ,KANV,EAFF,CADF,cAYE,8BAAQ,SAAS,CAAC,yBAAlB,oBAZF,CADsB,EAAxB,CAiBA,GAAMkB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAId,OAAJ,CAAa,CACX,mBAAO,0BAAI,SAAS,CAAC,cAAd,EAA8BJ,IAA9B,eAAP,CACD,CACF,CAJD,CAMA,GAAMmB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAIjB,KAAJ,CAAW,CACT,mBAAO,0BAAI,SAAS,CAAC,aAAd,8BAAP,CACD,CACF,CAJD,CAMA,GAAMkB,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,sBACb,2BAAK,SAAS,CAAC,MAAf,eACE,oBAAC,IAAD,EAAM,EAAE,CAAC,kBAAT,CAA4B,SAAS,CAAC,cAAtC,sBADF,CADa,EAAf,CAQA,mBACE,oBAAC,MAAD,EACE,KAAK,CAAC,oBADR,CAEE,WAAW,eAASd,IAAI,CAACN,IAAd,kCAFb,eAIE,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,SAAS,CAAC,sBAAf,EACGkB,WAAW,EADd,CAEGC,SAAS,EAFZ,CAGGF,eAAe,EAHlB,CAIGG,MAAM,EAJT,CADF,CAJF,CADF,CAeD,CAhFD,CAkFA,cAAerB,CAAAA,WAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link } from 'react-router-dom';\r\nimport { createCategory } from './apiAdmin';\r\n\r\nconst AddCategory = () => {\r\n  const [name, setName] = useState('');\r\n  const [error, setError] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  // destructure user and token from localstorage\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const handleChange = (e) => {\r\n    setError('');\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const clickSubmit = (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess(false);\r\n    // make request to api to create category\r\n    createCategory(user._id, token, { name }).then((data) => {\r\n      if (data.error) {\r\n        setError(data.error);\r\n      } else {\r\n        setError('');\r\n        setSuccess(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  const newCategoryForm = () => (\r\n    <form onSubmit={clickSubmit}>\r\n      <div className='form-group'>\r\n        <label className='text-muted'>Name</label>\r\n        <input\r\n          type='text'\r\n          className='form-control'\r\n          onChange={handleChange}\r\n          value={name}\r\n          autoFocus\r\n          required\r\n        />\r\n      </div>\r\n      <button className='btn btn-outline-primary'>Create Category</button>\r\n    </form>\r\n  );\r\n\r\n  const showSuccess = () => {\r\n    if (success) {\r\n      return <h3 className='text-success'>{name} is created</h3>;\r\n    }\r\n  };\r\n\r\n  const showError = () => {\r\n    if (error) {\r\n      return <h3 className='text-danger'>Category should be unique</h3>;\r\n    }\r\n  };\r\n\r\n  const goBack = () => (\r\n    <div className='mt-5'>\r\n      <Link to='/admin/dashboard' className='text-warning'>\r\n        Back to Dashboard\r\n      </Link>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Layout\r\n      title='Add a new category'\r\n      description={`Hey ${user.name}, ready to add a new category?`}\r\n    >\r\n      <div className='row'>\r\n        <div className='col-md-8 offset-md-2'>\r\n          {showSuccess()}\r\n          {showError()}\r\n          {newCategoryForm()}\r\n          {goBack()}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default AddCategory;\r\n"]},"metadata":{},"sourceType":"module"}