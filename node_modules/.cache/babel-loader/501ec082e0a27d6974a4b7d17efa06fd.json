{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dustin\\\\racecity-frontend\\\\src\\\\core\\\\Search.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { getFilteredProducts } from './apiCore';\n\nconst Search = () => {\n  const [allData, setAllData] = useState([]);\n  const [filteredData, setFilteredData] = useState([allData]);\n\n  const handleSearch = event => {};\n\n  useEffect(() => {\n    getFilteredProducts().then(response => {\n      console.log(response.data);\n      setAllData(response.data);\n      setFilteredData(response.data);\n    }).catch(error => {\n      console.log(\"Error getting fake data: \" + error);\n    });\n  }, []); // import { makeStyles } from '@material-ui/core/styles';\n  // import InputLabel from '@material-ui/core/InputLabel';\n  // import MenuItem from '@material-ui/core/MenuItem';\n  // import FormHelperText from '@material-ui/core/FormHelperText';\n  // import FormControl from '@material-ui/core/FormControl';\n  // import Select from '@material-ui/core/Select';\n  // import TextField from '@material-ui/core/TextField';\n  // import Button from '@material-ui/core/Button';\n  // import SearchIcon from '@material-ui/icons/Search';\n  // import { getCategories, list } from './apiCore';\n  // import Card from './Card';\n  // const useStyles = makeStyles((theme) => ({\n  //   formControl: {\n  //     margin: theme.spacing(1),\n  //     minWidth: 120,\n  //   },\n  //   selectEmpty: {\n  //     marginTop: theme.spacing(2),\n  //   },\n  //   tField: {\n  //     width: 800,\n  //     marginTop: 2,\n  //   },\n  //   root: {\n  //     '& > *': {\n  //       margin: theme.spacing(2),\n  //     },\n  //   },\n  // }));\n  // const Search = () => {\n  //   const [data, setData] = useState({\n  //     categories: [],\n  //     category: '',\n  //     search: '',\n  //     results: [],\n  //     searched: false,\n  //   });\n  //   const { categories, category, search, results, searched } = data;\n  //   const loadCategories = () => {\n  //     getCategories().then((data) => {\n  //       if (data.error) {\n  //         console.log(data.error);\n  //       } else {\n  //         setData({ ...data, categories: data });\n  //       }\n  //     });\n  //   };\n  //   useEffect(() => {\n  //     loadCategories();\n  //   }, []);\n  //   const searchData = () => {\n  //     // console.log(search, category);\n  //     if (search) {\n  //       list({ search: search || undefined, category: category }).then(\n  //         (response) => {\n  //           if (response.error) {\n  //             console.log(response.error);\n  //           } else {\n  //             setData({ ...data, results: response, searched: true });\n  //           }\n  //         }\n  //       );\n  //     }\n  //   };\n  //   const searchSubmit = (e) => {\n  //     e.preventDefault();\n  //     searchData();\n  //   };\n  //   const handleChange = (name) => (event) => {\n  //     setData({ ...data, [name]: event.target.value, searched: false });\n  //   };\n  //   const searchMessage = (searched, results) => {\n  //     if (searched && results.length > 0) {\n  //       return `Found ${results.length} products`;\n  //     }\n  //     if (searched && results.length < 1) {\n  //       return `Search: No products found`;\n  //     }\n  //   };\n  //   const searchedProducts = (results = []) => {\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"mt-4 mb-4 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, searchMessage(searched, results)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, results.map((product, i) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    key: i,\n    product: product,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }));\n  const classes = useStyles();\n\n  const searchForm = () => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: searchSubmit,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }\n  }, \"All\"))), /*#__PURE__*/React.createElement(TextField, {\n    onChange: handleChange('search'),\n    id: \"outlined-basic\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 26\n      }\n    }), \"Search by name\"),\n    variant: \"outlined\",\n    className: classes.tField,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-3 mt-2\",\n    style: {\n      border: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    ml: 2,\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, \"Search\")))));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, searchForm()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }, searchedProducts(results)));\n};\n\nexport default Search;","map":{"version":3,"sources":["D:/Dustin/racecity-frontend/src/core/Search.js"],"names":["React","useState","useEffect","axios","getFilteredProducts","Search","allData","setAllData","filteredData","setFilteredData","handleSearch","event","then","response","console","log","data","catch","error","searchMessage","searched","results","map","product","i","classes","useStyles","searchForm","searchSubmit","root","handleChange","tField","border","searchedProducts"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {getFilteredProducts} from './apiCore'\r\n\r\n\r\n\r\nconst Search = () => {\r\n  const [allData, setAllData] = useState([]);\r\nconst [filteredData, setFilteredData] = useState([allData])\r\n\r\nconst handleSearch = (event) => {\r\n\r\n}\r\n\r\nuseEffect(() => {\r\ngetFilteredProducts()\r\n  .then((response) => {\r\n    console.log(response.data);\r\n    setAllData(response.data);\r\n    setFilteredData(response.data);\r\n  })\r\n  .catch((error) => {\r\n    console.log(\"Error getting fake data: \" + error);\r\n  });\r\n}, []);\r\n\r\n\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import InputLabel from '@material-ui/core/InputLabel';\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\n// import FormHelperText from '@material-ui/core/FormHelperText';\r\n// import FormControl from '@material-ui/core/FormControl';\r\n// import Select from '@material-ui/core/Select';\r\n// import TextField from '@material-ui/core/TextField';\r\n// import Button from '@material-ui/core/Button';\r\n// import SearchIcon from '@material-ui/icons/Search';\r\n\r\n// import { getCategories, list } from './apiCore';\r\n// import Card from './Card';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   formControl: {\r\n//     margin: theme.spacing(1),\r\n//     minWidth: 120,\r\n//   },\r\n//   selectEmpty: {\r\n//     marginTop: theme.spacing(2),\r\n//   },\r\n//   tField: {\r\n//     width: 800,\r\n//     marginTop: 2,\r\n//   },\r\n//   root: {\r\n//     '& > *': {\r\n//       margin: theme.spacing(2),\r\n//     },\r\n//   },\r\n// }));\r\n\r\n// const Search = () => {\r\n//   const [data, setData] = useState({\r\n//     categories: [],\r\n//     category: '',\r\n//     search: '',\r\n//     results: [],\r\n//     searched: false,\r\n//   });\r\n\r\n//   const { categories, category, search, results, searched } = data;\r\n\r\n//   const loadCategories = () => {\r\n//     getCategories().then((data) => {\r\n//       if (data.error) {\r\n//         console.log(data.error);\r\n//       } else {\r\n//         setData({ ...data, categories: data });\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     loadCategories();\r\n//   }, []);\r\n\r\n//   const searchData = () => {\r\n//     // console.log(search, category);\r\n//     if (search) {\r\n//       list({ search: search || undefined, category: category }).then(\r\n//         (response) => {\r\n//           if (response.error) {\r\n//             console.log(response.error);\r\n//           } else {\r\n//             setData({ ...data, results: response, searched: true });\r\n//           }\r\n//         }\r\n//       );\r\n//     }\r\n//   };\r\n\r\n//   const searchSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     searchData();\r\n//   };\r\n\r\n//   const handleChange = (name) => (event) => {\r\n//     setData({ ...data, [name]: event.target.value, searched: false });\r\n//   };\r\n\r\n//   const searchMessage = (searched, results) => {\r\n//     if (searched && results.length > 0) {\r\n//       return `Found ${results.length} products`;\r\n//     }\r\n//     if (searched && results.length < 1) {\r\n//       return `Search: No products found`;\r\n//     }\r\n//   };\r\n\r\n//   const searchedProducts = (results = []) => {\r\n  return (\r\n      \r\n      \r\n      <div className='row'>\r\n        <div className='col-md-1'></div>\r\n        <div className='col-md-10'>\r\n          <h2 className='mt-4 mb-4 text-center'>{searchMessage(searched, results)}</h2>\r\n          <div className='row'>\r\n            {results.map((product, i) => (\r\n              <div className='col-md-4 mb-3'>\r\n                <Card key={i} product={product} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className='col-md-1'></div>\r\n      </div>\r\n    );\r\n  \r\n\r\n  const classes = useStyles();\r\n\r\n  const searchForm = () => (\r\n    <form onSubmit={searchSubmit} className={classes.root}>\r\n      <span className='input-group-text'>\r\n        <div className='input-group input-group-lg'>\r\n          <div className='input-group-prepend'>\r\n            {/* <FormControl className={classes.formControl}>\r\n              <InputLabel id='demo-simple-select-helper-label'>\r\n                Select\r\n              </InputLabel>\r\n              <Select\r\n                labelId='demo-simple-select-placeholder-label-label'\r\n                id='demo-simple-select-placeholder-label'\r\n                value={data.name}\r\n                onChange={handleChange('category')}\r\n                displayEmpty\r\n                className={classes.selectEmpty}\r\n              > */}\r\n                <MenuItem value='All'>\r\n                  <em>All</em>\r\n                </MenuItem>\r\n                {/* {categories.map((c, i) => (\r\n                  <MenuItem key={i} value={c._id}>\r\n                    {c.name}\r\n                  </MenuItem>\r\n                ))} */}\r\n              {/* </Select>\r\n            </FormControl> */}\r\n          </div>\r\n\r\n          <TextField\r\n            onChange={handleChange('search')}\r\n            id='outlined-basic'\r\n            label={<span><SearchIcon/>Search by name</span>}\r\n            variant='outlined'\r\n            className={classes.tField}\r\n            autoComplete='off'\r\n          />\r\n\r\n          <div className='ml-3 mt-2' style={{ border: 'none' }}>\r\n            <Button ml={2} variant='contained' color='primary' type='submit'>\r\n              Search\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </span>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='container mb-3'>{searchForm()}</div>\r\n      <div className='container-fluid mb-3'>{searchedProducts(results)}</div>\r\n    </div>\r\n   );\r\n };\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}